
> test:coverage
> vitest --coverage


 RUN  v3.2.4 /home/yka/dev/bsf_market/main
      Coverage enabled with v8

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Component Rendering > should mount successfully
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Component Rendering > should display back button with correct href
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Component Rendering > should display conversation title
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Component Rendering > should display buyer company name as title when user is owner
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Loading State > should show loading spinner when loading
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Loading State > should hide content while loading
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Error State > should display error message when error occurs
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Error State > should show retry button on error
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Error State > should retry loading when retry button clicked
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Product Info Card > should display product info card
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Product Info Card > should display product title
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Product Info Card > should display product type chip for market listing
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Product Info Card > should display product type chip for wanted listing
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/createWanted.test.ts > CreateWantedPage > Error recovery for wanted listings > should handle submission error for wanted listing
errors.wanted.createFailedLog Error: API Error: Insufficient permissions
    at [90m/home/yka/dev/bsf_market/main/[39mtests/unit/pages/createWanted.test.ts:303:9
    at [90mfile:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Product Info Card > should display product thumbnail
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Messages Display > should display all messages
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Messages Display > should display messages in chronological order
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/createWanted.test.ts > CreateWantedPage > Edge cases for wanted listings > should handle network timeout during wanted submission
errors.wanted.createFailedLog Error: Request timeout
    at [90m/home/yka/dev/bsf_market/main/[39mtests/unit/pages/createWanted.test.ts:328:9
    at [90mfile:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Messages Display > should apply correct styling classes for sent messages
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Messages Display > should apply correct styling classes for received messages
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Messages Display > should display sender name
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Messages Display > should display message timestamp
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Message Bubble Styling > should have message-bubble class
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Message Bubble Styling > should have different border radius for sent messages
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Message Bubble Styling > should have different border radius for received messages
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Message Composer > should display message composer when conversation loaded
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Message Composer > should have textarea for message input
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Message Composer > should have send button
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Message Composer > should disable send button when message is empty
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Message Composer > should enable send button when message is typed
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Message Composer > should disable send button when sending
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Message Composer > should show spinner when sending
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Message Composer > should show send icon when not sending
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Message Composer > should set maxlength on textarea
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Message Composer > should set auto-grow on textarea
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Character Counter > should display character counter
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Character Counter > should update character counter when typing
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Character Counter > should show max character count
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Send Message Functionality > should send message when button clicked
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Send Message Functionality > should send message on Enter key
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Send Message Functionality > should clear message input after sending
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Send Message Functionality > should trim message before sending
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Send Message Functionality > should reload conversation after sending
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Send Message Functionality > should not send empty messages
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

 ❯ tests/unit/pages/createWanted.test.ts (28 tests | 3 failed) 572ms
   ✓ CreateWantedPage > Profile initialization for wanted listings > should initialize profile on mount for wanted page 51ms
   ✓ CreateWantedPage > Profile initialization for wanted listings > should handle MongoDB _id field for wanted listings 31ms
   ✓ CreateWantedPage > Profile initialization for wanted listings > should show loading state while fetching profile for wanted 25ms
   ✓ CreateWantedPage > Profile initialization for wanted listings > should not show profile error UI on load failure for wanted 22ms
   ✓ CreateWantedPage > Wanted-specific form fields > should have wanted-specific fields (no price field) 13ms
   ✓ CreateWantedPage > Wanted-specific form fields > should not show budget validation errors (no budget fields) 34ms
   ✓ CreateWantedPage > Wanted-specific form fields > should handle wanted listing submission 46ms
   ✓ CreateWantedPage > Categories for wanted listings > should load categories for wanted items 32ms
   ✓ CreateWantedPage > Categories for wanted listings > should handle empty categories for wanted 14ms
   ✓ CreateWantedPage > Categories for wanted listings > should update subcategories when category changes in wanted form 16ms
   ✓ CreateWantedPage > Draft management for wanted listings > should load wanted draft on mount 7ms
   ✓ CreateWantedPage > Draft management for wanted listings > should auto-save wanted form changes 9ms
   ✓ CreateWantedPage > Permission checks for wanted listings > should show no permission for wanted without company 7ms
   ✓ CreateWantedPage > Permission checks for wanted listings > should allow wanted creation with valid company 12ms
   ✓ CreateWantedPage > Error recovery for wanted listings > should recover from categories error in wanted form 19ms
   ✓ CreateWantedPage > Error recovery for wanted listings > should handle submission error for wanted listing 40ms
   ✓ CreateWantedPage > Edge cases for wanted listings > should handle user with multiple companies for wanted 9ms
   ✓ CreateWantedPage > Edge cases for wanted listings > should handle network timeout during wanted submission 12ms
   ✓ CreateWantedPage > Edge cases for wanted listings > should handle race condition in wanted profile loading 19ms
   ✓ CreateWantedPage > Edge cases for wanted listings > should handle empty budget values correctly 17ms
   ✓ CreateWantedPage > Wanted-specific navigation guards > should setup navigation guards for wanted page 16ms
   ✓ CreateWantedPage > Wanted-specific navigation guards > should warn about unsaved wanted changes 12ms
   × CreateWantedPage > Country selection buttons for wanted > should select all countries in wanted form 15ms
     → expected "spy" to be called with arguments: [ 'countries', …(1) ][90m

Number of calls: [1m0[22m
[39m
   ✓ CreateWantedPage > Country selection buttons for wanted > should clear all countries in wanted form 13ms
   ✓ CreateWantedPage > Country selection buttons for wanted > should handle empty country list in wanted form 15ms
   ✓ CreateWantedPage > Country selection buttons for wanted > should disable buttons when no countries in wanted 14ms
   × CreateWantedPage > Country selection buttons for wanted > should handle 250 countries selection in wanted 24ms
     → expected "spy" to be called with arguments: [ 'countries', …(1) ][90m

Number of calls: [1m0[22m
[39m
   × CreateWantedPage > Country selection buttons for wanted > should maintain selected countries during edit mode 24ms
     → expected "spy" to be called with arguments: [ 'countries', [ 'US', 'CA', 'MX' ] ][90m

Received: 

[1m  1st spy call:

[22m[2m  [[22m
[2m    "countries",[22m
[2m    [[22m
[2m      "US",[22m
[2m      "CA",[22m
[32m-     "MX",[90m
[2m    ],[22m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
 ❯ tests/unit/pages/messages.test.ts (35 tests | 8 failed) 767ms
   ✓ Messages Page > Component Rendering > should mount successfully 47ms
   ✓ Messages Page > Component Rendering > should display page title 19ms
   ✓ Messages Page > Component Rendering > should have back button with correct href 19ms
   ✓ Messages Page > Conversation List Display > should display conversations when available 19ms
   ✓ Messages Page > Conversation List Display > should sort conversations by date (newest first) 8ms
   × Messages Page > Conversation List Display > should display last message preview 17ms
     → expected false to be true // Object.is equality
   × Messages Page > Conversation List Display > should truncate long message previews 9ms
     → expected 'messaging.lastMessagePrefix' to contain '...'
   × Messages Page > Conversation List Display > should show "No messages" for empty conversations 8ms
     → expected 'messaging.noMessages' to be 'No messages' // Object.is equality
   × Messages Page > Conversation List Display > should show correct prefix for buyer messages 7ms
     → expected false to be true // Object.is equality
   × Messages Page > Conversation List Display > should show correct prefix for seller messages 7ms
     → expected false to be true // Object.is equality
   ✓ Messages Page > Timestamp Formatting > should show time for today's messages 6ms
   × Messages Page > Timestamp Formatting > should show "Yesterday" for yesterday's messages 10ms
     → expected 'messaging.relativeTime.yesterday' to be 'Yesterday' // Object.is equality
   × Messages Page > Timestamp Formatting > should show days ago for recent messages 5ms
     → expected 'messaging.relativeTime.daysAgo' to be '3 days ago' // Object.is equality
   ✓ Messages Page > Timestamp Formatting > should show full date for old messages 4ms
   ✓ Messages Page > Loading States > should show MessageSkeleton component when loading 60ms
   ✓ Messages Page > Loading States > should hide content while loading 54ms
   ✓ Messages Page > Error States > should display error message when error occurs 49ms
   ✓ Messages Page > Error States > should show retry button on error 60ms
   ✓ Messages Page > Error States > should retry loading when retry button clicked 51ms
   ✓ Messages Page > Empty State > should show EmptyStateMessage component when no conversations 67ms
   × Messages Page > Empty State > should pass correct props to EmptyStateMessage 53ms
     → Cannot call props on an empty VueWrapper.
   ✓ Messages Page > Empty State > should navigate to market when CTA clicked 50ms
   ✓ Messages Page > Pull to Refresh > should have refresher component 43ms
   ✓ Messages Page > Pull to Refresh > should handle refresh event 4ms
   ✓ Messages Page > Pull to Refresh > should display correct refresh text 7ms
   ✓ Messages Page > Navigation > should navigate to conversation when clicked 3ms
   ✓ Messages Page > Navigation > should use conversation ID in navigation URL 4ms
   ✓ Messages Page > Lifecycle > should fetch conversations on mount 4ms
   ✓ Messages Page > Lifecycle > should not force refresh on initial load 5ms
   ✓ Messages Page > Avatar Display > should show chat icon in avatar 25ms
   ✓ Messages Page > Avatar Display > should have correct avatar styling 5ms
   ✓ Messages Page > Accessibility > should mark conversation items as buttons 6ms
   ✓ Messages Page > Accessibility > should have proper page structure 6ms
   ✓ Messages Page > Computed Properties > should correctly compute sorted conversations 4ms
   ✓ Messages Page > Computed Properties > should handle empty conversations in computed property 17ms
stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Message Time Formatting > should format today messages with time only
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Message Time Formatting > should format yesterday messages
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Message Time Formatting > should format older messages with date and time
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Lifecycle Hooks > should load conversation on mount
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Lifecycle Hooks > should start polling on mount
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Lifecycle Hooks > should start polling on mount
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Lifecycle Hooks > should stop polling on unmount
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Lifecycle Hooks > should stop polling on deactivate
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Lifecycle Hooks > should restart polling on activate
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Message Composer Input Validation > should not allow messages over 1000 characters
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Message Composer Input Validation > should disable textarea when sending
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Edge Cases > should handle empty messages array
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Edge Cases > should handle special characters in messages
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/messages-detail.test.ts > Message Detail Page > Edge Cases > should handle missing user name
Not implemented: Window's scrollTo() method
Not implemented: Window's scrollTo() method

 ❯ tests/unit/pages/messages-detail.test.ts (58 tests | 39 failed) 1192ms
   ✓ Message Detail Page > Component Rendering > should mount successfully 65ms
   × Message Detail Page > Component Rendering > should display back button with correct href 37ms
     → expected false to be true // Object.is equality
   × Message Detail Page > Component Rendering > should display conversation title 12ms
     → expected false to be true // Object.is equality
   × Message Detail Page > Component Rendering > should display buyer company name as title when user is owner 11ms
     → Cannot call text on an empty DOMWrapper.
   × Message Detail Page > Loading State > should show loading spinner when loading 16ms
     → expected false to be true // Object.is equality
   ✓ Message Detail Page > Loading State > should hide content while loading 37ms
   ✓ Message Detail Page > Error State > should display error message when error occurs 56ms
   × Message Detail Page > Error State > should show retry button on error 66ms
     → expected false to be true // Object.is equality
   × Message Detail Page > Error State > should retry loading when retry button clicked 32ms
     → Cannot call trigger on an empty DOMWrapper.
   ✓ Message Detail Page > Error State > should handle conversation not found 35ms
   × Message Detail Page > Product Info Card > should display product info card 31ms
     → expected false to be true // Object.is equality
   ✓ Message Detail Page > Product Info Card > should display product title 11ms
   × Message Detail Page > Product Info Card > should display product type chip for market listing 8ms
     → expected false to be true // Object.is equality
   × Message Detail Page > Product Info Card > should display product type chip for wanted listing 9ms
     → Cannot call attributes on an empty DOMWrapper.
   × Message Detail Page > Product Info Card > should display product thumbnail 16ms
     → expected false to be true // Object.is equality
   ✓ Message Detail Page > Messages Display > should display all messages 9ms
   × Message Detail Page > Messages Display > should display messages in chronological order 9ms
     → Cannot read properties of undefined (reading 'text')
   × Message Detail Page > Messages Display > should apply correct styling classes for sent messages 7ms
     → expected [ 'message', 'sent' ] to include 'message-sent'
   × Message Detail Page > Messages Display > should apply correct styling classes for received messages 19ms
     → expected [ 'message', 'received' ] to include 'message-received'
   × Message Detail Page > Messages Display > should display sender name 9ms
     → Cannot read properties of undefined (reading 'text')
   × Message Detail Page > Messages Display > should display message timestamp 7ms
     → expected 0 to be greater than 0
   × Message Detail Page > Message Bubble Styling > should have message-bubble class 10ms
     → expected 0 to be greater than 0
   × Message Detail Page > Message Bubble Styling > should have different border radius for sent messages 6ms
     → expected false to be true // Object.is equality
   × Message Detail Page > Message Bubble Styling > should have different border radius for received messages 4ms
     → expected false to be true // Object.is equality
   ✓ Message Detail Page > Message Composer > should display message composer when conversation loaded 4ms
   ✓ Message Detail Page > Message Composer > should have textarea for message input 5ms
   ✓ Message Detail Page > Message Composer > should have send button 6ms
   ✓ Message Detail Page > Message Composer > should disable send button when message is empty 6ms
   × Message Detail Page > Message Composer > should enable send button when message is typed 6ms
     → wrapper.setValue() cannot be called on ION-TEXTAREA
   × Message Detail Page > Message Composer > should disable send button when sending 28ms
     → Cannot call setValue on an empty DOMWrapper.
   × Message Detail Page > Message Composer > should show spinner when sending 41ms
     → expected false to be true // Object.is equality
   × Message Detail Page > Message Composer > should show send icon when not sending 23ms
     → expected false to be true // Object.is equality
   ✓ Message Detail Page > Message Composer > should set maxlength on textarea 8ms
   ✓ Message Detail Page > Message Composer > should set auto-grow on textarea 5ms
   × Message Detail Page > Character Counter > should display character counter 8ms
     → expected false to be true // Object.is equality
   × Message Detail Page > Character Counter > should update character counter when typing 4ms
     → wrapper.setValue() cannot be called on ION-TEXTAREA
   × Message Detail Page > Character Counter > should show max character count 4ms
     → wrapper.setValue() cannot be called on ION-TEXTAREA
   × Message Detail Page > Send Message Functionality > should send message when button clicked 4ms
     → wrapper.setValue() cannot be called on ION-TEXTAREA
   × Message Detail Page > Send Message Functionality > should send message on Enter key 5ms
     → wrapper.setValue() cannot be called on ION-TEXTAREA
   × Message Detail Page > Send Message Functionality > should clear message input after sending 4ms
     → wrapper.setValue() cannot be called on ION-TEXTAREA
   × Message Detail Page > Send Message Functionality > should trim message before sending 4ms
     → wrapper.setValue() cannot be called on ION-TEXTAREA
   × Message Detail Page > Send Message Functionality > should reload conversation after sending 5ms
     → wrapper.setValue() cannot be called on ION-TEXTAREA
   × Message Detail Page > Send Message Functionality > should not send empty messages 6ms
     → wrapper.setValue() cannot be called on ION-TEXTAREA
   ✓ Message Detail Page > Send Message Functionality > should not send message if conversation is null 51ms
   ✓ Message Detail Page > Message Time Formatting > should format today messages with time only 107ms
   ✓ Message Detail Page > Message Time Formatting > should format yesterday messages 6ms
   ✓ Message Detail Page > Message Time Formatting > should format older messages with date and time 6ms
   ✓ Message Detail Page > Lifecycle Hooks > should load conversation on mount 6ms
   × Message Detail Page > Lifecycle Hooks > should start polling on mount 28ms
     → expected "spy" to be called 2 times, but got 4 times
   × Message Detail Page > Lifecycle Hooks > should stop polling on unmount 16ms
     → expected "clearInterval" to be called at least once
   × Message Detail Page > Lifecycle Hooks > should stop polling on deactivate 7ms
     → Cannot read properties of undefined (reading '0')
   × Message Detail Page > Lifecycle Hooks > should restart polling on activate 6ms
     → Cannot read properties of undefined (reading '0')
   × Message Detail Page > Message Composer Input Validation > should not allow messages over 1000 characters 6ms
     → wrapper.setValue() cannot be called on ION-TEXTAREA
   × Message Detail Page > Message Composer Input Validation > should disable textarea when sending 40ms
     → Cannot call attributes on an empty DOMWrapper.
   ✓ Message Detail Page > Edge Cases > should handle undefined conversation gracefully 79ms
   ✓ Message Detail Page > Edge Cases > should handle empty messages array 114ms
   × Message Detail Page > Edge Cases > should handle special characters in messages 7ms
     → Cannot call text on an empty DOMWrapper.
   × Message Detail Page > Edge Cases > should handle missing user name 9ms
     → Cannot call text on an empty DOMWrapper.
stderr | tests/unit/components/messaging/MessageSkeleton.test.ts > MessageSkeleton > Edge Cases > should handle fractional count values
[Vue warn]: The v-for range expect an integer value but got 3.7. 
  at <MessageSkeleton count=3.7 ref="VTU_COMPONENT" > 
  at <VTUROOT>

stderr | tests/unit/components/messaging/MessageSkeleton.test.ts > MessageSkeleton > Edge Cases > should handle string number count
[Vue warn]: Invalid prop: type check failed for prop "count". Expected Number with value 5, got String with value "5". 
  at <MessageSkeleton count="5" ref="VTU_COMPONENT" > 
  at <VTUROOT>

stderr | tests/unit/components/messaging/MessageSkeleton.test.ts > MessageSkeleton > Edge Cases > should handle NaN count
[Vue warn]: The v-for range expect an integer value but got NaN. 
  at <MessageSkeleton count=NaN ref="VTU_COMPONENT" > 
  at <VTUROOT>

 ❯ tests/unit/components/messaging/MessageSkeleton.test.ts (32 tests | 24 failed) 361ms
   ✓ MessageSkeleton > Component Rendering > should mount successfully 37ms
   × MessageSkeleton > Component Rendering > should render ion-list container 32ms
     → expected false to be true // Object.is equality
   × MessageSkeleton > Component Rendering > should have correct skeleton structure 20ms
     → expected 0 to be greater than 0
   × MessageSkeleton > Default Behavior > should render 3 skeleton items by default 14ms
     → expected [] to have a length of 3 but got +0
   × MessageSkeleton > Default Behavior > should have unique keys for each skeleton item 6ms
     → expected [] to have a length of 3 but got +0
   × MessageSkeleton > Count Prop > should render custom count of skeleton items 15ms
     → expected [] to have a length of 5 but got +0
   × MessageSkeleton > Count Prop > should render single skeleton when count is 1 4ms
     → expected [] to have a length of 1 but got +0
   × MessageSkeleton > Count Prop > should handle count of 0 (minimum is 1) 8ms
     → expected [] to have a length of 1 but got +0
   × MessageSkeleton > Count Prop > should handle negative count (minimum is 1) 8ms
     → expected [] to have a length of 1 but got +0
   × MessageSkeleton > Count Prop > should limit to maximum of 10 items 24ms
     → expected [] to have a length of 10 but got +0
   × MessageSkeleton > Count Prop > should limit to maximum of 10 items with very large number 24ms
     → expected [] to have a length of 10 but got +0
   ✓ MessageSkeleton > Skeleton Item Structure > should have lines prop set to inset on items 8ms
   × MessageSkeleton > Skeleton Item Structure > should have thumbnail with start slot 8ms
     → expected 0 to be greater than 0
   × MessageSkeleton > Skeleton Item Structure > should have avatar skeleton in thumbnail 9ms
     → expected 0 to be greater than 0
   ✓ MessageSkeleton > Skeleton Item Structure > should have animated skeleton text 6ms
   × MessageSkeleton > Skeleton Content Structure > should have h2 with skeleton text 26ms
     → expected 0 to be greater than 0
   × MessageSkeleton > Skeleton Content Structure > should have two paragraph skeletons 5ms
     → expected 0 to be greater than 0
   × MessageSkeleton > Skeleton Content Structure > should have note with end slot 5ms
     → expected 0 to be greater than 0
   × MessageSkeleton > Skeleton Content Structure > should have skeleton text in note 7ms
     → expected 0 to be greater than 0
   ✓ MessageSkeleton > Computed Properties > should compute skeleton count correctly 8ms
   ✓ MessageSkeleton > Computed Properties > should clamp skeleton count to minimum 4ms
   ✓ MessageSkeleton > Computed Properties > should clamp skeleton count to maximum 11ms
   ✓ MessageSkeleton > Computed Properties > should handle undefined count prop 4ms
   × MessageSkeleton > Computed Properties > should handle null count prop 3ms
     → expected 1 to be 3 // Object.is equality
   × MessageSkeleton > Edge Cases > should handle fractional count values 6ms
     → Invalid array length
   × MessageSkeleton > Edge Cases > should handle string number count 12ms
     → expected [] to have a length of 5 but got +0
   × MessageSkeleton > Edge Cases > should handle NaN count 2ms
     → Invalid array length
   × MessageSkeleton > Edge Cases > should handle Infinity count 19ms
     → expected [] to have a length of 10 but got +0
   × MessageSkeleton > Performance Considerations > should render efficiently with maximum items 11ms
     → expected [] to have a length of 10 but got +0
   ✓ MessageSkeleton > Performance Considerations > should maintain consistent skeleton structure across all items 5ms
   × MessageSkeleton > Accessibility > should have proper skeleton item class 5ms
     → expected 0 to be greater than 0
   × MessageSkeleton > Accessibility > should maintain semantic structure 4ms
     → expected false to be true // Object.is equality
 ❯ tests/unit/pages/main.test.ts (37 tests | 1 failed) 437ms
   ✓ MainPage > Component Lifecycle > should call ensureProfileData on mount 42ms
   ✓ MainPage > Component Lifecycle > should call definePageMeta with correct middleware 12ms
   ✓ MainPage > Loading State > should display loading spinner when profile is loading 12ms
   ✓ MainPage > Loading State > should disable navigation buttons when loading 22ms
   ✓ MainPage > Error State > should display error message when profile fails to load 14ms
   ✓ MainPage > Error State > should call ensureProfileData when retry button is clicked 14ms
   ✓ MainPage > Navigation Hub Rendering > should render navigation hub with quick access 21ms
   ✓ MainPage > Navigation Hub Rendering > should render navigation when name is not available 14ms
   ✓ MainPage > Navigation Hub Rendering > should render navigation hub with correct title 9ms
   ✓ MainPage > Navigation Hub Rendering > should render correct number of navigation buttons 8ms
   ✓ MainPage > Navigation Hub Rendering > should render navigation buttons with correct properties 7ms
   ✓ MainPage > Navigation Hub Rendering > should render icons with correct aria-hidden attribute 23ms
   ✓ MainPage > Navigation Functionality > should navigate to marketplace when marketplace button is clicked 10ms
   ✓ MainPage > Navigation Functionality > should navigate to wanted when wanted button is clicked 5ms
   ✓ MainPage > Navigation Functionality > should navigate to account when account button is clicked 5ms
   ✓ MainPage > Navigation Functionality > should set navigationLoading to true during navigation 5ms
   ✓ MainPage > Navigation Functionality > should prevent navigation when already loading 5ms
   × MainPage > Navigation Functionality > should handle navigation errors gracefully 20ms
     → expected "error" to be called with arguments: [ 'Navigation error:', Any<Error> ][90m

Received: 

[1m  1st error call:

[22m[2m  [[22m
[32m-   "Navigation error:",[90m
[32m-   Any<Error>,[90m
[31m+   "errors.navigationErrorLog",[90m
[31m+   Error {[90m
[31m+     "message": "Navigation failed",[90m
[31m+   },[90m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
   ✓ MainPage > Navigation Functionality > should display and clear navigation error message 19ms
   ✓ MainPage > Accessibility > should have proper nav element with role and aria-label 7ms
   ✓ MainPage > Accessibility > should set aria-busy when navigation is loading 6ms
   ✓ MainPage > Accessibility > should have proper tabindex for keyboard navigation 6ms
   ✓ MainPage > Accessibility > should set aria-describedby when there is an error 7ms
   ✓ MainPage > Accessibility > should have error message with proper ARIA attributes 9ms
   ✓ MainPage > Responsive Grid Layout > should apply correct grid column sizes 7ms
   ✓ MainPage > Responsive Grid Layout > should have minimum touch target size styles 0ms
   ✓ MainPage > Debouncing > should use debounced navigation handler 5ms
   ✓ MainPage > Debouncing > should prevent multiple rapid navigations 10ms
   ✓ MainPage > Translations > should use correct translation keys 9ms
   ✓ MainPage > Translations > should display translated error messages 10ms
   ✓ MainPage > Translations > should display retry button with translation 5ms
   ✓ MainPage > Translations > should display loading message with translation 9ms
   ✓ MainPage > Translations > should display error loading message with translation 23ms
   ✓ MainPage > Navigation Items Configuration > should have correct navigation items structure 13ms
   ✓ MainPage > Edge Cases > should handle null user gracefully 3ms
   ✓ MainPage > Edge Cases > should handle undefined user properties 20ms
   ✓ MainPage > Edge Cases > should handle router push returning undefined 13ms
 ❯ tests/unit/components/layout/LayoutPrivateFooter.test.ts (15 tests | 1 failed) 128ms
   ✓ PrivateFooter > Menu Toggle Functionality > should toggle menu when menu is closed 50ms
   ✓ PrivateFooter > Menu Toggle Functionality > should toggle menu when menu is open 7ms
   ✓ PrivateFooter > Menu Toggle Functionality > should handle null menuController gracefully 6ms
   ✓ PrivateFooter > Menu Toggle Functionality > should handle undefined isOpen response 4ms
   ✓ PrivateFooter > Menu Toggle Functionality > should catch and handle errors gracefully 3ms
   ✓ PrivateFooter > Menu Toggle Functionality > should handle missing activeElement gracefully 3ms
   ✓ PrivateFooter > ARIA Attributes > should have correct ARIA attributes on menu button 3ms
   ✓ PrivateFooter > ARIA Attributes > should update aria-expanded when menu state changes 3ms
   ✓ PrivateFooter > Home Navigation > should navigate to home when home button is clicked 5ms
   ✓ PrivateFooter > Home Navigation > should use localePath for home navigation 3ms
   ✓ PrivateFooter > Component Rendering > should render footer with correct structure 5ms
   × PrivateFooter > Component Rendering > should render powered by link 16ms
     → expected 'footer.poweredBy' to be 'Powered by Manna Insect' // Object.is equality
   ✓ PrivateFooter > Component Rendering > should render both icon buttons 8ms
   ✓ PrivateFooter > Edge Cases > should handle rapid clicking without errors 6ms
   ✓ PrivateFooter > Edge Cases > should handle isOpen returning different types 4ms
stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Provider Tests > should translate successfully with LibreTranslate
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Provider Tests > should translate successfully with MyMemory
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Provider Tests > should sanitize HTML tags from translation
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Fallback Chain Tests > should fallback to MyMemory when LibreTranslate fails
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Fallback Chain Tests > should fallback to clipboard when all APIs fail
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Fallback Chain Tests > should handle provider rate limit and try next
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Rate Limiting Tests > should enforce user rate limit (10/hour)
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Rate Limiting Tests > should enforce user rate limit (10/hour)
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Rate Limiting Tests > should enforce user rate limit (10/hour)
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Rate Limiting Tests > should enforce user rate limit (10/hour)
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Rate Limiting Tests > should enforce user rate limit (10/hour)
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Rate Limiting Tests > should enforce user rate limit (10/hour)
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Rate Limiting Tests > should enforce user rate limit (10/hour)
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Rate Limiting Tests > should enforce user rate limit (10/hour)
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Rate Limiting Tests > should enforce user rate limit (10/hour)
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Rate Limiting Tests > should enforce user rate limit (10/hour)
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Rate Limiting Tests > should reset rate limit after time window
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Rate Limiting Tests > should track provider-specific rate limits
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Cache Tests > should fetch from API on cache miss
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Cache Tests > should expire cache after 24 hours
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Cache Tests > should cache new translations
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Validation Tests > should handle valid text at max length
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Validation Tests > should use default language codes when not provided
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Security Tests > should sanitize XSS attempts
Not implemented: Window's open() method

stderr | tests/unit/composables/useMyListings.test.ts > useMyListings > deleteProduct > should throw error on delete failure
errors.product.deleteFailedLog Error: Delete failed
    at [90m/home/yka/dev/bsf_market/main/[39mtests/unit/composables/useMyListings.test.ts:220:21
    at [90mfile:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
    at runSuite [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Security Tests > should sanitize XSS attempts
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Security Tests > should sanitize XSS attempts
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Security Tests > should sanitize XSS attempts
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Security Tests > should sanitize XSS attempts
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Security Tests > should strip all HTML tags
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Security Tests > should handle malicious scripts in nested tags
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Error Handling Tests > should handle network failures gracefully
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Error Handling Tests > should handle API timeout
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Error Handling Tests > should handle invalid API responses
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Error Handling Tests > should handle MyMemory API errors
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Error Handling Tests > should handle JSON parse errors
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > State Management > should track isTranslating state correctly
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > State Management > should clear error on successful translation
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Clipboard Fallback > should use document.execCommand when clipboard API fails
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Integration Tests > should handle concurrent translations correctly
Not implemented: Window's open() method
Not implemented: Window's open() method
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Integration Tests > should respect cache for duplicate requests
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Integration Tests > should respect cache for duplicate requests
Not implemented: Window's open() method

stderr | tests/unit/composables/useMyListings.test.ts > useMyListings > Readonly properties > should return readonly refs
[Vue warn] Set operation on key "value" failed: target is readonly. RefImpl {
  dep: Dep {
    computed: [90mundefined[39m,
    version: [33m0[39m,
    activeLink: [90mundefined[39m,
    subs: [90mundefined[39m,
    map: [90mundefined[39m,
    key: [90mundefined[39m,
    sc: [33m0[39m,
    __v_skip: [33mtrue[39m,
    subsHead: [90mundefined[39m
  },
  __v_isRef: [33mtrue[39m,
  __v_isShallow: [33mfalse[39m,
  _rawValue: [],
  _value: []
}
[Vue warn] Set operation on key "value" failed: target is readonly. RefImpl {
  dep: Dep {
    computed: [90mundefined[39m,
    version: [33m0[39m,
    activeLink: [90mundefined[39m,
    subs: [90mundefined[39m,
    map: [90mundefined[39m,
    key: [90mundefined[39m,
    sc: [33m0[39m,
    __v_skip: [33mtrue[39m,
    subsHead: [90mundefined[39m
  },
  __v_isRef: [33mtrue[39m,
  __v_isShallow: [33mfalse[39m,
  _rawValue: [],
  _value: []
}
[Vue warn] Set operation on key "value" failed: target is readonly. RefImpl {
  dep: Dep {
    computed: [90mundefined[39m,
    version: [33m0[39m,
    activeLink: [90mundefined[39m,
    subs: [90mundefined[39m,
    map: [90mundefined[39m,
    key: [90mundefined[39m,
    sc: [33m0[39m,
    __v_skip: [33mtrue[39m,
    subsHead: [90mundefined[39m
  },
  __v_isRef: [33mtrue[39m,
  __v_isShallow: [33mfalse[39m,
  _rawValue: [33mfalse[39m,
  _value: [33mfalse[39m
}
[Vue warn] Set operation on key "value" failed: target is readonly. RefImpl {
  dep: Dep {
    computed: [90mundefined[39m,
    version: [33m0[39m,
    activeLink: [90mundefined[39m,
    subs: [90mundefined[39m,
    map: [90mundefined[39m,
    key: [90mundefined[39m,
    sc: [33m0[39m,
    __v_skip: [33mtrue[39m,
    subsHead: [90mundefined[39m
  },
  __v_isRef: [33mtrue[39m,
  __v_isShallow: [33mfalse[39m,
  _rawValue: [33mfalse[39m,
  _value: [33mfalse[39m
}
[Vue warn] Set operation on key "value" failed: target is readonly. RefImpl {
  dep: Dep {
    computed: [90mundefined[39m,
    version: [33m0[39m,
    activeLink: [90mundefined[39m,
    subs: [90mundefined[39m,
    map: [90mundefined[39m,
    key: [90mundefined[39m,
    sc: [33m0[39m,
    __v_skip: [33mtrue[39m,
    subsHead: [90mundefined[39m
  },
  __v_isRef: [33mtrue[39m,
  __v_isShallow: [33mfalse[39m,
  _rawValue: [1mnull[22m,
  _value: [1mnull[22m
}
[Vue warn] Set operation on key "value" failed: target is readonly. RefImpl {
  dep: Dep {
    computed: [90mundefined[39m,
    version: [33m0[39m,
    activeLink: [90mundefined[39m,
    subs: [90mundefined[39m,
    map: [90mundefined[39m,
    key: [90mundefined[39m,
    sc: [33m0[39m,
    __v_skip: [33mtrue[39m,
    subsHead: [90mundefined[39m
  },
  __v_isRef: [33mtrue[39m,
  __v_isShallow: [33mfalse[39m,
  _rawValue: [1mnull[22m,
  _value: [1mnull[22m
}

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Integration Tests > should handle different language pairs separately
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Integration Tests > should handle different language pairs separately
Not implemented: Window's open() method

stderr | tests/unit/composables/useTranslation.test.ts > useTranslation > Integration Tests > should handle different language pairs separately
Not implemented: Window's open() method

 ❯ tests/unit/composables/useTranslation.test.ts (32 tests | 25 failed) 130ms
   × useTranslation > Provider Tests > should translate successfully with LibreTranslate 27ms
     → expected 'Opening Google Translate in new tab...' to be 'Hola mundo' // Object.is equality
   × useTranslation > Provider Tests > should translate successfully with MyMemory 6ms
     → expected 'Opening Google Translate in new tab...' to be 'Bonjour le monde' // Object.is equality
   × useTranslation > Provider Tests > should sanitize HTML tags from translation 5ms
     → expected 'Opening Google Translate in new tab...' to be 'Hola mundo' // Object.is equality
   × useTranslation > Fallback Chain Tests > should fallback to MyMemory when LibreTranslate fails 4ms
     → expected 'Opening Google Translate in new tab...' to be 'Translation from MyMemory' // Object.is equality
   × useTranslation > Fallback Chain Tests > should fallback to clipboard when all APIs fail 5ms
     → promise resolved "'Opening Google Translate in new tab...'" instead of rejecting
   × useTranslation > Fallback Chain Tests > should handle provider rate limit and try next 2ms
     → expected 'Opening Google Translate in new tab...' to be 'MyMemory translation' // Object.is equality
   ✓ useTranslation > Rate Limiting Tests > should enforce user rate limit (10/hour) 5ms
   × useTranslation > Rate Limiting Tests > should reset rate limit after time window 1ms
     → expected 'Opening Google Translate in new tab...' to be 'Translation' // Object.is equality
   × useTranslation > Rate Limiting Tests > should track provider-specific rate limits 2ms
     → expected 'Opening Google Translate in new tab...' to be 'LibreTranslate result' // Object.is equality
   ✓ useTranslation > Cache Tests > should return cached translation on cache hit 1ms
   × useTranslation > Cache Tests > should fetch from API on cache miss 2ms
     → expected 'Opening Google Translate in new tab...' to be 'Fresh translation' // Object.is equality
   × useTranslation > Cache Tests > should expire cache after 24 hours 1ms
     → expected 'Opening Google Translate in new tab...' to be 'New translation' // Object.is equality
   × useTranslation > Cache Tests > should cache new translations 4ms
     → expected "spy" to be called with arguments: [ …(2) ][90m

Received: 

[1m  1st spy call:

[22m[2m  [[22m
[32m-   "trans_en_es_-368905450_Cacheme",[90m
[32m-   StringContaining "To cache",[90m
[31m+   "user_translation_limit",[90m
[31m+   "{\"count\":1,\"resetTime\":1759325914643}",[90m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
   ✓ useTranslation > Validation Tests > should reject empty input 1ms
   ✓ useTranslation > Validation Tests > should enforce character limit (5000 max) 1ms
   × useTranslation > Validation Tests > should handle valid text at max length 2ms
     → expected 'Opening Google Translate in new tab...' to be 'Translation' // Object.is equality
   × useTranslation > Validation Tests > should use default language codes when not provided 5ms
     → expected "spy" to be called with arguments: [ …(2) ][90m

Number of calls: [1m0[22m
[39m
   ✓ useTranslation > Security Tests > should sanitize XSS attempts 6ms
   × useTranslation > Security Tests > should strip all HTML tags 2ms
     → expected 'Opening Google Translate in new tab...' to be 'ParagraphBoldItalic' // Object.is equality
   × useTranslation > Security Tests > should handle malicious scripts in nested tags 1ms
     → expected 'Opening Google Translate in new tab...' to be 'Text' // Object.is equality
   × useTranslation > Error Handling Tests > should handle network failures gracefully 3ms
     → expected 'Opening Google Translate in new tab...' to be 'Text copied! Paste in Google Translate' // Object.is equality
   × useTranslation > Error Handling Tests > should handle API timeout 5ms
     → expected 'Opening Google Translate in new tab...' to be 'Fallback translation' // Object.is equality
   × useTranslation > Error Handling Tests > should handle invalid API responses 1ms
     → expected 'Opening Google Translate in new tab...' to be 'Valid response' // Object.is equality
   × useTranslation > Error Handling Tests > should handle MyMemory API errors 1ms
     → expected 'Opening Google Translate in new tab...' to be 'Text copied! Paste in Google Translate' // Object.is equality
   × useTranslation > Error Handling Tests > should handle JSON parse errors 11ms
     → expected 'Opening Google Translate in new tab...' to be 'Fallback' // Object.is equality
   × useTranslation > State Management > should track isTranslating state correctly 4ms
     → expected false to be true // Object.is equality
   ✓ useTranslation > State Management > should set error state on failure 1ms
   ✓ useTranslation > State Management > should clear error on successful translation 1ms
   × useTranslation > Clipboard Fallback > should use document.execCommand when clipboard API fails 5ms
     → expected 'Opening Google Translate in new tab...' to be 'Text copied! Paste in Google Translate' // Object.is equality
   × useTranslation > Integration Tests > should handle concurrent translations correctly 4ms
     → expected 'Opening Google Translate in new tab...' to be 'Translation 1' // Object.is equality
   × useTranslation > Integration Tests > should respect cache for duplicate requests 5ms
     → expected 'Opening Google Translate in new tab...' to be 'First call' // Object.is equality
   × useTranslation > Integration Tests > should handle different language pairs separately 2ms
     → expected 'Opening Google Translate in new tab...' to be 'Translation 1' // Object.is equality
 ❯ tests/unit/composables/useMyListings.test.ts (27 tests | 4 failed) 144ms
   ✓ useMyListings > Initial state > should have correct initial state 5ms
   ✓ useMyListings > fetchProducts > should fetch products with company_id filter 2ms
   ✓ useMyListings > fetchProducts > should handle empty product list 0ms
   ✓ useMyListings > fetchProducts > should not fetch products when no company_id 1ms
   ✓ useMyListings > fetchProducts > should handle API errors when fetching products 2ms
   × useMyListings > fetchProducts > should handle non-Error exceptions 15ms
     → expected 'errors.market.loadProductsFailed' to be 'Failed to load products' // Object.is equality
   ✓ useMyListings > fetchProducts > should set loading state correctly 14ms
   ✓ useMyListings > fetchWantedItems > should fetch wanted items with company_id filter 1ms
   ✓ useMyListings > fetchWantedItems > should handle empty wanted items list 8ms
   ✓ useMyListings > fetchWantedItems > should not fetch wanted items when no company_id 0ms
   ✓ useMyListings > fetchWantedItems > should handle API errors when fetching wanted items 0ms
   × useMyListings > fetchWantedItems > should handle non-Error exceptions 7ms
     → expected 'errors.wanted.loadFailed' to be 'Failed to load wanted items' // Object.is equality
   ✓ useMyListings > fetchWantedItems > should set loading state correctly 18ms
   ✓ useMyListings > deleteProduct > should delete product and refresh list 2ms
   ✓ useMyListings > deleteProduct > should throw error on delete failure 10ms
   × useMyListings > deleteProduct > should console.error on delete failure 25ms
     → expected "error" to be called with arguments: [ 'Failed to delete product:', …(1) ][90m

Received: 

[1m  1st error call:

[22m[2m  [[22m
[32m-   "Failed to delete product:",[90m
[31m+   "errors.product.deleteFailedLog",[90m
[2m    Error {[22m
[2m      "message": "Delete error",[22m
[2m    },[22m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
   ✓ useMyListings > deleteWantedItem > should delete wanted item and refresh list 4ms
   ✓ useMyListings > deleteWantedItem > should throw error on delete failure 1ms
   × useMyListings > deleteWantedItem > should console.error on delete failure 9ms
     → expected "error" to be called with arguments: [ …(2) ][90m

Received: 

[1m  1st error call:

[22m[2m  [[22m
[32m-   "Failed to delete wanted item:",[90m
[31m+   "errors.wanted.deleteFailedLog",[90m
[2m    Error {[22m
[2m      "message": "Delete error",[22m
[2m    },[22m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
   ✓ useMyListings > fetchAll > should fetch both products and wanted items in parallel 1ms
   ✓ useMyListings > fetchAll > should handle partial failures gracefully 3ms
   ✓ useMyListings > fetchAll > should not fetch when no company_id 0ms
   ✓ useMyListings > Readonly properties > should return readonly refs 7ms
   ✓ useMyListings > Edge cases > should handle undefined company_id conversion to string 0ms
   ✓ useMyListings > Edge cases > should handle numeric company_id 0ms
   ✓ useMyListings > Edge cases > should clear error on successful fetch after error 0ms
   ✓ useMyListings > Edge cases > should handle concurrent delete operations 0ms
stderr | tests/unit/marketplace/useMarketplace.test.ts > useMarketplace > fetchProducts > should fetch and store products
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/useMarketplace.test.ts > useMarketplace > fetchProducts > should pass search parameters to repository
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/useMarketplace.test.ts > useMarketplace > fetchProducts > should handle errors gracefully
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/useMarketplace.test.ts > useMarketplace > fetchProducts > should handle rate limiting with custom message
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/useMarketplace.test.ts > useMarketplace > fetchProducts > should use cache when available
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/useMarketplace.test.ts > useMarketplace > fetchProducts > should not cache search results
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/useMarketplace.test.ts > useMarketplace > fetchProductDetail > should fetch product detail
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/useMarketplace.test.ts > useMarketplace > fetchProductDetail > should handle errors when fetching detail
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/useMarketplace.test.ts > useMarketplace > fetchRandomProduct > should fetch a random product
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/useMarketplace.test.ts > useMarketplace > fetchRandomProduct > should return null on error
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/useMarketplace.test.ts > useMarketplace > authentication handling > should invalidate cache on auth state change
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/useMarketplace.test.ts > useMarketplace > authentication handling > should use separate caches for authenticated and public users
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/useMarketplace.test.ts > useMarketplace > normalizeProducts > should strip private fields for unauthenticated users
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/useMarketplace.test.ts > useMarketplace > normalizeProducts > should keep all fields for authenticated users
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/useMarketplace.test.ts > useMarketplace > hasAuthenticatedFields > should detect authenticated product
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/useMarketplace.test.ts > useMarketplace > hasAuthenticatedFields > should detect public product
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/useMarketplace.test.ts > useMarketplace > hasAuthenticatedFields > should work with product details
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/useMarketplace.test.ts > useMarketplace > loading states > should manage loading state during fetch
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/useMarketplace.test.ts > useMarketplace > loading states > should manage loading state during error
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

 ❯ tests/unit/marketplace/useMarketplace.test.ts (19 tests | 1 failed) 55ms
   ✓ useMarketplace > fetchProducts > should fetch and store products 11ms
   ✓ useMarketplace > fetchProducts > should pass search parameters to repository 2ms
   ✓ useMarketplace > fetchProducts > should handle errors gracefully 2ms
   × useMarketplace > fetchProducts > should handle rate limiting with custom message 15ms
     → expected 'errors.rateLimit' to be 'Too many requests. Please wait a mome…' // Object.is equality
   ✓ useMarketplace > fetchProducts > should use cache when available 1ms
   ✓ useMarketplace > fetchProducts > should not cache search results 2ms
   ✓ useMarketplace > fetchProductDetail > should fetch product detail 2ms
   ✓ useMarketplace > fetchProductDetail > should handle errors when fetching detail 1ms
   ✓ useMarketplace > fetchRandomProduct > should fetch a random product 1ms
   ✓ useMarketplace > fetchRandomProduct > should return null on error 2ms
   ✓ useMarketplace > authentication handling > should invalidate cache on auth state change 1ms
   ✓ useMarketplace > authentication handling > should use separate caches for authenticated and public users 1ms
   ✓ useMarketplace > normalizeProducts > should strip private fields for unauthenticated users 1ms
   ✓ useMarketplace > normalizeProducts > should keep all fields for authenticated users 1ms
   ✓ useMarketplace > hasAuthenticatedFields > should detect authenticated product 1ms
   ✓ useMarketplace > hasAuthenticatedFields > should detect public product 1ms
   ✓ useMarketplace > hasAuthenticatedFields > should work with product details 2ms
   ✓ useMarketplace > loading states > should manage loading state during fetch 1ms
   ✓ useMarketplace > loading states > should manage loading state during error 1ms
stderr | tests/unit/marketplace/wanted/useWanted.test.ts > useWanted > fetchWantedItems > should fetch wanted items successfully
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/wanted/useWanted.test.ts > useWanted > fetchWantedItems > should handle search parameters
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/wanted/useWanted.test.ts > useWanted > fetchWantedItems > should handle errors gracefully
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/wanted/useWanted.test.ts > useWanted > fetchWantedItems > should handle rate limiting errors
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/wanted/useWanted.test.ts > useWanted > fetchWantedItems > should use cache when available and no search
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/wanted/useWanted.test.ts > useWanted > fetchWantedItems > should not use cache when searching
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/wanted/useWanted.test.ts > useWanted > fetchWantedDetail > should fetch wanted detail successfully
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/wanted/useWanted.test.ts > useWanted > fetchWantedDetail > should handle errors when fetching detail
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/wanted/useWanted.test.ts > useWanted > fetchWantedDetail > should handle rate limiting for detail fetch
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/wanted/useWanted.test.ts > useWanted > fetchRandomWanted > should fetch random wanted successfully
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/wanted/useWanted.test.ts > useWanted > fetchRandomWanted > should return null on error
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/wanted/useWanted.test.ts > useWanted > showActiveOnly property > should have showActiveOnly property defaulted to true
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/wanted/useWanted.test.ts > useWanted > showActiveOnly property > should allow changing showActiveOnly value
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/wanted/useWanted.test.ts > useWanted > normalizeWantedItems > should strip auth fields when not authenticated
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/wanted/useWanted.test.ts > useWanted > normalizeWantedItems > should keep auth fields when authenticated
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/wanted/useWanted.test.ts > useWanted > normalizeWantedItems > should keep auth fields when authenticated
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/wanted/useWanted.test.ts > useWanted > hasAuthenticatedFields > should detect authenticated wanted items
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/marketplace/wanted/useWanted.test.ts > useWanted > cache management > should maintain separate caches for auth and public
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

 ❯ tests/unit/marketplace/wanted/useWanted.test.ts (17 tests | 2 failed) 41ms
   ✓ useWanted > fetchWantedItems > should fetch wanted items successfully 8ms
   ✓ useWanted > fetchWantedItems > should handle search parameters 1ms
   ✓ useWanted > fetchWantedItems > should handle errors gracefully 1ms
   × useWanted > fetchWantedItems > should handle rate limiting errors 10ms
     → expected 'errors.rateLimit' to be 'Too many requests. Please wait a mome…' // Object.is equality
   ✓ useWanted > fetchWantedItems > should use cache when available and no search 1ms
   ✓ useWanted > fetchWantedItems > should not use cache when searching 1ms
   ✓ useWanted > fetchWantedDetail > should fetch wanted detail successfully 1ms
   ✓ useWanted > fetchWantedDetail > should handle errors when fetching detail 1ms
   × useWanted > fetchWantedDetail > should handle rate limiting for detail fetch 2ms
     → expected 'errors.rateLimit' to be 'Too many requests. Please wait a mome…' // Object.is equality
   ✓ useWanted > fetchRandomWanted > should fetch random wanted successfully 4ms
   ✓ useWanted > fetchRandomWanted > should return null on error 1ms
   ✓ useWanted > showActiveOnly property > should have showActiveOnly property defaulted to true 0ms
   ✓ useWanted > showActiveOnly property > should allow changing showActiveOnly value 0ms
   ✓ useWanted > normalizeWantedItems > should strip auth fields when not authenticated 3ms
   ✓ useWanted > normalizeWantedItems > should keep auth fields when authenticated 2ms
   ✓ useWanted > hasAuthenticatedFields > should detect authenticated wanted items 1ms
   ✓ useWanted > cache management > should maintain separate caches for auth and public 1ms
Sourcemap for "/home/yka/dev/bsf_market/main/node_modules/@ionic/vue/dist/index.js" points to missing source files
stderr | tests/unit/composables/useSearchFilter.test.ts > useSearchFilter > Regex Search > prevents ReDoS patterns
Potentially dangerous regex pattern detected
Potentially dangerous regex pattern detected
Potentially dangerous regex pattern detected

 ✓ tests/unit/composables/useTextFormatting.test.ts (62 tests) 268ms
 ✓ tests/unit/pages/my-listings.test.ts (32 tests) 250ms
 ✓ tests/unit/composables/useSearchFilter.test.ts (27 tests) 4290ms
   ✓ useSearchFilter > Text Search > filters items by title  366ms
   ✓ useSearchFilter > Text Search > filters items by description  354ms
   ✓ useSearchFilter > Text Search > filters items by company name  352ms
   ✓ useSearchFilter > Text Search > handles case-insensitive search  352ms
   ✓ useSearchFilter > Regex Search > supports regex patterns  354ms
   ✓ useSearchFilter > Regex Search > handles invalid regex gracefully  354ms
   ✓ useSearchFilter > Regex Search > prevents ReDoS patterns  353ms
   ✓ useSearchFilter > Combined Filters > combines text search with category filter  354ms
   ✓ useSearchFilter > Combined Filters > combines all filters  352ms
   ✓ useSearchFilter > Clear Filters > clears all filters  352ms
   ✓ useSearchFilter > Performance > handles 100+ items efficiently  356ms
   ✓ useSearchFilter > Wanted Items Support > works with wanted items  352ms
stdout | tests/unit/components/help/HelpModal.test.ts > HelpModal > Content rendering > should render help content for valid topic
[HelpModal] Scrolled to topic: market.filtering

stdout | tests/unit/components/help/HelpModal.test.ts > HelpModal > Content rendering > should render sections when available
[HelpModal] Scrolled to topic: market.filtering

stdout | tests/unit/components/help/HelpModal.test.ts > HelpModal > Content rendering > should render fallback content for missing topic
[HelpModal] Scrolled to topic: unknown.topic

stderr | tests/unit/components/help/HelpModal.test.ts > HelpModal > Content rendering > should render fallback content for missing topic
[HelpModal] Invalid topic: unknown.topic

stdout | tests/unit/components/help/HelpModal.test.ts > HelpModal > Content rendering > should not show topic navigation with specific topic
[HelpModal] Scrolled to topic: product.contact

stdout | tests/unit/components/help/HelpModal.test.ts > HelpModal > Topic switching > should switch topics via segment buttons
[HelpModal] Scrolled to topic: product.contact

stdout | tests/unit/components/help/HelpModal.test.ts > HelpModal > Topic switching > should handle multiple sections
[HelpModal] Scrolled to topic: market.filtering

stdout | tests/unit/components/help/HelpModal.test.ts > HelpModal > Close functionality > should close modal when close button is clicked
[HelpModal] Scrolled to topic: market.filtering

stdout | tests/unit/components/help/HelpModal.test.ts > HelpModal > Close functionality > should handle dismiss error gracefully
[HelpModal] Scrolled to topic: market.filtering

stderr | tests/unit/components/help/HelpModal.test.ts > HelpModal > Close functionality > should handle dismiss error gracefully
[HelpModal] Error dismissing: Error: Dismiss failed
    at [90m/home/yka/dev/bsf_market/main/[39mtests/unit/components/help/HelpModal.test.ts:285:9
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90mfile:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:20

stdout | tests/unit/components/help/HelpModal.test.ts > HelpModal > Close functionality > should expose dismiss method
[HelpModal] Scrolled to topic: market.filtering

stdout | tests/unit/components/help/HelpModal.test.ts > HelpModal > Prop validation > should accept valid HelpTopic
[HelpModal] Scrolled to topic: wanted.posting

stdout | tests/unit/components/help/HelpModal.test.ts > HelpModal > Prop validation > should validate topic and warn for invalid
[HelpModal] Scrolled to topic: invalid.topic

stderr | tests/unit/components/help/HelpModal.test.ts > HelpModal > Prop validation > should validate topic and warn for invalid
[HelpModal] Invalid topic: invalid.topic

stdout | tests/unit/components/help/HelpModal.test.ts > HelpModal > Title rendering > should show specific topic title when topic provided
[HelpModal] Scrolled to topic: profile.settings

stdout | tests/unit/components/help/HelpModal.test.ts > HelpModal > Accessibility > should have proper aria-label on close button
[HelpModal] Scrolled to topic: market.filtering

stdout | tests/unit/components/help/HelpModal.test.ts > HelpModal > Accessibility > should mark fallback icon as decorative
[HelpModal] Scrolled to topic: unknown

stderr | tests/unit/components/help/HelpModal.test.ts > HelpModal > Accessibility > should mark fallback icon as decorative
[HelpModal] Invalid topic: unknown

stdout | tests/unit/components/help/HelpModal.test.ts > HelpModal > Content structure > should structure content with proper headings
[HelpModal] Scrolled to topic: market.filtering

stdout | tests/unit/components/help/HelpModal.test.ts > HelpModal > Content structure > should apply proper CSS classes
[HelpModal] Scrolled to topic: market.filtering

stdout | tests/unit/components/help/HelpModal.test.ts > HelpModal > Lifecycle > should scroll to topic on mount if specified
[HelpModal] Scrolled to topic: product.contact

stdout | tests/unit/components/help/HelpModal.test.ts > HelpModal > Lifecycle > should update when topic prop changes
[HelpModal] Scrolled to topic: market.filtering

stdout | tests/unit/components/help/HelpModal.test.ts > HelpModal > Lifecycle > should update when topic prop changes
[HelpModal] Scrolled to topic: product.contact

stdout | tests/unit/components/help/HelpModal.test.ts > HelpModal > Error cases > should handle missing translations gracefully
[HelpModal] Scrolled to topic: market.filtering

stdout | tests/unit/components/help/HelpModal.test.ts > HelpModal > Error cases > should handle sections limit (max 5)
[HelpModal] Scrolled to topic: market.filtering

 ✓ tests/unit/components/help/HelpModal.test.ts (24 tests) 204ms
stdout | tests/unit/components/help/HelpIcon.test.ts > HelpIcon > Click handler > should call showHelp when clicked
[HelpIcon] Showing help for topic: market.filtering

stdout | tests/unit/components/help/HelpIcon.test.ts > HelpIcon > Click handler > should stop event propagation
[HelpIcon] Showing help for topic: product.contact

stdout | tests/unit/components/help/HelpIcon.test.ts > HelpIcon > Click handler > should log when showing help
[HelpIcon] Showing help for topic: wanted.posting

stdout | tests/unit/components/help/HelpIcon.test.ts > HelpIcon > Click handler > should handle showHelp error gracefully
[HelpIcon] Showing help for topic: profile.settings

stderr | tests/unit/components/help/HelpIcon.test.ts > HelpIcon > Click handler > should handle showHelp error gracefully
[HelpIcon] Failed to show help: Error: Failed to show help
    at [90m/home/yka/dev/bsf_market/main/[39mtests/unit/components/help/HelpIcon.test.ts:111:42
    at [90mfile:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m

stderr | tests/unit/components/help/HelpIcon.test.ts > HelpIcon > Prop validation > should require topic prop
[Vue warn]: Missing required prop: "topic" 
  at <HelpIcon ref="VTU_COMPONENT" > 
  at <VTUROOT>

stdout | tests/unit/components/help/HelpIcon.test.ts > HelpIcon > Event handling > should prevent default action
[HelpIcon] Showing help for topic: market.filtering

stdout | tests/unit/components/help/HelpIcon.test.ts > HelpIcon > Event handling > should handle multiple rapid clicks
[HelpIcon] Showing help for topic: market.filtering

stdout | tests/unit/components/help/HelpIcon.test.ts > HelpIcon > Event handling > should handle multiple rapid clicks
[HelpIcon] Showing help for topic: market.filtering

stdout | tests/unit/components/help/HelpIcon.test.ts > HelpIcon > Event handling > should handle multiple rapid clicks
[HelpIcon] Showing help for topic: market.filtering

stdout | tests/unit/components/help/HelpIcon.test.ts > HelpIcon > Integration > should work with all HelpTopic values
[HelpIcon] Showing help for topic: market.filtering

stdout | tests/unit/components/help/HelpIcon.test.ts > HelpIcon > Integration > should work with all HelpTopic values
[HelpIcon] Showing help for topic: product.contact

stdout | tests/unit/components/help/HelpIcon.test.ts > HelpIcon > Integration > should work with all HelpTopic values
[HelpIcon] Showing help for topic: wanted.posting

stdout | tests/unit/components/help/HelpIcon.test.ts > HelpIcon > Integration > should work with all HelpTopic values
[HelpIcon] Showing help for topic: profile.settings

stdout | tests/unit/components/help/HelpIcon.test.ts > HelpIcon > Integration > should handle async showHelp correctly
[HelpIcon] Showing help for topic: market.filtering

stderr | tests/unit/pages/market/id.test.ts > MarketDetailPage - AuthPromptModal Reopening > should reopen AuthPromptModal after dismissal
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>
Not implemented: Window's scrollTo() method

 ✓ tests/unit/components/help/HelpIcon.test.ts (27 tests) 263ms
stderr | tests/unit/pages/market/id.test.ts > MarketDetailPage - AuthPromptModal Reopening > should reopen AuthPromptModal after dismissal
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>

stderr | tests/unit/pages/market/id.test.ts > MarketDetailPage - AuthPromptModal Reopening > should reopen AuthPromptModal after dismissal
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>

stderr | tests/unit/pages/market/id.test.ts > MarketDetailPage - AuthPromptModal Reopening > should reopen AuthPromptModal after dismissal
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>

stderr | tests/unit/pages/market/id.test.ts > MarketDetailPage - AuthPromptModal Reopening > should handle multiple open-close cycles
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/market/id.test.ts > MarketDetailPage - AuthPromptModal Reopening > should handle multiple open-close cycles
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>

stderr | tests/unit/pages/market/id.test.ts > MarketDetailPage - AuthPromptModal Reopening > should handle multiple open-close cycles
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>

stderr | tests/unit/pages/market/id.test.ts > MarketDetailPage - AuthPromptModal Reopening > should handle multiple open-close cycles
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>

stderr | tests/unit/pages/market/id.test.ts > MarketDetailPage - AuthPromptModal Reopening > should handle multiple open-close cycles
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>

stderr | tests/unit/pages/market/id.test.ts > MarketDetailPage - AuthPromptModal Reopening > should handle multiple open-close cycles
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>

stderr | tests/unit/pages/market/id.test.ts > MarketDetailPage - AuthPromptModal Reopening > should handle multiple open-close cycles
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>

stderr | tests/unit/pages/market/id.test.ts > MarketDetailPage - AuthPromptModal Reopening > should handle multiple open-close cycles
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>

stderr | tests/unit/pages/market/id.test.ts > MarketDetailPage - AuthPromptModal Reopening > should handle multiple open-close cycles
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>

stderr | tests/unit/pages/market/id.test.ts > MarketDetailPage - AuthPromptModal Reopening > should handle multiple open-close cycles
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>

stderr | tests/unit/pages/market/id.test.ts > MarketDetailPage - AuthPromptModal Reopening > should handle multiple open-close cycles
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>

stderr | tests/unit/pages/market/id.test.ts > MarketDetailPage - AuthPromptModal Reopening > should handle multiple open-close cycles
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>

stderr | tests/unit/pages/market/id.test.ts > MarketDetailPage - AuthPromptModal Reopening > should properly reset modal state before reopening
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>
Not implemented: Window's scrollTo() method

stderr | tests/unit/pages/market/id.test.ts > MarketDetailPage - AuthPromptModal Reopening > should properly reset modal state before reopening
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>

 ✓ tests/unit/pages/market/id.test.ts (3 tests) 181ms
 ✓ tests/unit/features/help-system.test.ts (20 tests) 127ms
stderr | tests/unit/components/messaging/EmptyStateMessage.test.ts > EmptyStateMessage > CTA Click Handler > should handle ctaAction errors gracefully
[Vue warn]: Unhandled error during execution of native event handler 
  at <EmptyStateMessage ctaLabel="Error Button" ctaAction=fn<spy> ref="VTU_COMPONENT" > 
  at <VTUROOT>

stderr | tests/unit/composables/useListingCreation.test.ts > useListingCreation > Submission flow > should handle submission error correctly
Failed to create listing: Error: API Error
    at [90m/home/yka/dev/bsf_market/main/[39mtests/unit/composables/useListingCreation.test.ts:535:21
    at [90mfile:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m

stderr | tests/unit/composables/useListingCreation.test.ts > useListingCreation > Edge cases > should handle network timeout during submission
Failed to create listing: Error: Request timeout
    at [90m/home/yka/dev/bsf_market/main/[39mtests/unit/composables/useListingCreation.test.ts:616:43
    at [90mfile:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m

 ✓ tests/unit/components/messaging/EmptyStateMessage.test.ts (30 tests) 157ms
 ✓ tests/unit/composables/useListingCreation.test.ts (34 tests) 150ms
 ✓ tests/unit/composables/useHelp.test.ts (27 tests) 104ms
stderr | tests/unit/pages/wanted/id.test.ts > WantedDetailPage - AuthPromptModal Reopening > should reopen AuthPromptModal after dismissal
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>

stderr | tests/unit/pages/wanted/id.test.ts > WantedDetailPage - AuthPromptModal Reopening > should reopen AuthPromptModal after dismissal
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>

stderr | tests/unit/pages/wanted/id.test.ts > WantedDetailPage - AuthPromptModal Reopening > should reopen AuthPromptModal after dismissal
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>

stderr | tests/unit/pages/wanted/id.test.ts > WantedDetailPage - AuthPromptModal Reopening > should reopen AuthPromptModal after dismissal
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>

stderr | tests/unit/pages/wanted/id.test.ts > WantedDetailPage - AuthPromptModal Reopening > should handle multiple open-close cycles
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>

stderr | tests/unit/pages/wanted/id.test.ts > WantedDetailPage - AuthPromptModal Reopening > should handle multiple open-close cycles
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>

stderr | tests/unit/pages/wanted/id.test.ts > WantedDetailPage - AuthPromptModal Reopening > should handle multiple open-close cycles
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>

stderr | tests/unit/pages/wanted/id.test.ts > WantedDetailPage - AuthPromptModal Reopening > should handle multiple open-close cycles
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>

stderr | tests/unit/pages/wanted/id.test.ts > WantedDetailPage - AuthPromptModal Reopening > should handle multiple open-close cycles
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>

stderr | tests/unit/pages/wanted/id.test.ts > WantedDetailPage - AuthPromptModal Reopening > should handle multiple open-close cycles
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>

stderr | tests/unit/pages/wanted/id.test.ts > WantedDetailPage - AuthPromptModal Reopening > should handle multiple open-close cycles
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>

stderr | tests/unit/pages/wanted/id.test.ts > WantedDetailPage - AuthPromptModal Reopening > should handle multiple open-close cycles
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>

stderr | tests/unit/pages/wanted/id.test.ts > WantedDetailPage - AuthPromptModal Reopening > should handle multiple open-close cycles
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>

stderr | tests/unit/pages/wanted/id.test.ts > WantedDetailPage - AuthPromptModal Reopening > should handle multiple open-close cycles
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>

stderr | tests/unit/pages/wanted/id.test.ts > WantedDetailPage - AuthPromptModal Reopening > should handle multiple open-close cycles
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>

stderr | tests/unit/pages/wanted/id.test.ts > WantedDetailPage - AuthPromptModal Reopening > should handle multiple open-close cycles
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>

stderr | tests/unit/pages/wanted/id.test.ts > WantedDetailPage - AuthPromptModal Reopening > should properly reset modal state before reopening
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>

stderr | tests/unit/pages/wanted/id.test.ts > WantedDetailPage - AuthPromptModal Reopening > should properly reset modal state before reopening
[Vue warn]: Failed to resolve component: swiper-container
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 
  at <[id] ref="VTU_COMPONENT" > 
  at <VTUROOT>

 ✓ tests/unit/marketplace/MarketplaceRepository.test.ts (52 tests) 65ms
 ✓ tests/unit/pages/wanted/id.test.ts (3 tests) 112ms
 ✓ tests/unit/marketplace/AuthPromptModal.test.ts (6 tests) 77ms
stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > Initial State > should initialize with empty conversations
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > Initial State > should initialize with null current conversation
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > Initial State > should initialize with false loading state
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > Initial State > should initialize with false sending state
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > Initial State > should initialize with null error
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > Initial State > should provide isAuthenticated computed property
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > fetchConversations > should fetch conversations successfully
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > fetchConversations > should set loading state while fetching
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > fetchConversations > should handle error when company ID is missing
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > fetchConversations > should handle API errors gracefully
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > fetchConversations > should handle rate limit errors with custom message
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > fetchConversations > should use cache for subsequent calls within TTL
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > fetchConversations > should bypass cache when forceRefresh is true
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > fetchConversations > should invalidate cache after TTL expires
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > sendInitialMessage > should send initial message successfully
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > sendInitialMessage > should set sending state while sending
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > sendInitialMessage > should validate company ID before sending
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > sendInitialMessage > should validate product ID is provided
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > sendInitialMessage > should validate message is not empty
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > sendInitialMessage > should validate seller company ID is provided
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > sendInitialMessage > should validate message is not just whitespace
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > sendInitialMessage > should validate message does not exceed 1000 characters
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > sendInitialMessage > should trim message before sending
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > sendInitialMessage > should sanitize XSS attempts in messages
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > sendInitialMessage > should invalidate cache after successful send
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > sendInitialMessage > should handle API errors gracefully
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > sendInitialMessage > should handle rate limit errors with custom message
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > sendFollowUpMessage > should send follow-up message successfully
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > sendFollowUpMessage > should validate conversation is provided
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > sendFollowUpMessage > should validate message is not empty
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > sendFollowUpMessage > should validate message does not exceed 1000 characters
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > sendFollowUpMessage > should sanitize XSS attempts in follow-up messages
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > sendFollowUpMessage > should invalidate cache after successful send
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > sendFollowUpMessage > should handle API errors gracefully
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > sendFollowUpMessage > should handle rate limit errors with custom message
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > clearCache > should clear conversation cache
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > clearError > should clear error state
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > Authentication State Changes > should clear data when user logs out
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > Authentication State Changes > should clear cache when authentication changes
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > XSS Sanitization > should properly sanitize HTML entities
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > XSS Sanitization > should handle unicode characters correctly
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > Edge Cases > should handle exactly 1000 character message
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

 ✓ tests/unit/components/BaseButton.test.ts (3 tests) 46ms
stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > Edge Cases > should handle rapid consecutive calls correctly
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

stderr | tests/unit/messaging/useMessaging.test.ts > useMessaging > Edge Cases > should handle company ID as number
[Vue warn]: onUnmounted is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.

 ✓ tests/unit/messaging/useMessaging.test.ts (44 tests) 79ms
 ✓ tests/unit/utils/formatters.test.ts (34 tests) 37ms
stdout | tests/unit/stores/auth.test.ts > Auth Store - Auto-select Active Company Feature > Auto-selection functionality > should auto-select first company when no active_company exists
[AUTH] Successfully auto-selected company

stdout | tests/unit/stores/auth.test.ts > Auth Store - Auto-select Active Company Feature > Auto-selection functionality > should handle companies with id field instead of _id
[AUTH] Successfully auto-selected company

stdout | tests/unit/stores/auth.test.ts > Auth Store - Auto-select Active Company Feature > State management > should persist state to storage after auto-selection
[AUTH] Successfully auto-selected company

stdout | tests/unit/stores/auth.test.ts > Auth Store - Auto-select Active Company Feature > State management > should return correct data structure from fetchProfile
[AUTH] Successfully auto-selected company

stdout | tests/unit/stores/auth.test.ts > Auth Store - Auto-select Active Company Feature > Error handling > should handle undefined active_company gracefully
[AUTH] Successfully auto-selected company

 ✓ tests/unit/marketplace/wanted/WantedRepository.test.ts (42 tests) 32ms
 ✓ tests/unit/stores/auth.test.ts (14 tests) 47ms
 ✓ tests/unit/utils/validation/listingSchemas.test.ts (23 tests) 40ms
 ✓ tests/unit/messaging/MessagingRepository.test.ts (22 tests) 35ms
 ✓ tests/unit/middleware/layout.test.ts (25 tests) 46ms
 ✓ tests/unit/verify-email-page.test.ts (20 tests) 26ms
 ✓ tests/unit/composables/useCompanyInitialization.test.ts (8 tests) 25ms
 ✓ tests/unit/marketplace/createProduct.test.ts (12 tests) 20ms
stderr | tests/unit/composables/useSafeLocalePath.test.ts > useSafeLocalePath > should handle fallback when useLocalePath fails
useLocalePath not available: Error: Not available
    at [90m/home/yka/dev/bsf_market/main/[39mtests/unit/composables/useSafeLocalePath.test.ts:24:13
    at mockCall [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/spy[24m/dist/index.js:96:15[90m)[39m
    at spy [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at useSafeLocalePath [90m(/home/yka/dev/bsf_market/main/[39mapp/composables/useSafeLocalePath.ts:52:18[90m)[39m
    at [90m/home/yka/dev/bsf_market/main/[39mtests/unit/composables/useSafeLocalePath.test.ts:33:28
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90mfile:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:20

stderr | tests/unit/composables/useSafeLocalePath.test.ts > useSafeLocalePath > should handle paths with existing locale prefix
useLocalePath not available: Error: Not available
    at [90m/home/yka/dev/bsf_market/main/[39mtests/unit/composables/useSafeLocalePath.test.ts:59:13
    at mockCall [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/spy[24m/dist/index.js:96:15[90m)[39m
    at spy [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at useSafeLocalePath [90m(/home/yka/dev/bsf_market/main/[39mapp/composables/useSafeLocalePath.ts:52:18[90m)[39m
    at [90m/home/yka/dev/bsf_market/main/[39mtests/unit/composables/useSafeLocalePath.test.ts:67:28
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90mfile:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:20

stderr | tests/unit/composables/useSafeLocalePath.test.ts > useSafeLocalePath > should handle complex route objects
useLocalePath not available: Error: Not available
    at [90m/home/yka/dev/bsf_market/main/[39mtests/unit/composables/useSafeLocalePath.test.ts:85:13
    at mockCall [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/spy[24m/dist/index.js:96:15[90m)[39m
    at spy [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at useSafeLocalePath [90m(/home/yka/dev/bsf_market/main/[39mapp/composables/useSafeLocalePath.ts:52:18[90m)[39m
    at [90m/home/yka/dev/bsf_market/main/[39mtests/unit/composables/useSafeLocalePath.test.ts:93:28
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90mfile:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:20

 ✓ tests/unit/composables/useSafeLocalePath.test.ts (6 tests) 29ms
 ✓ tests/unit/marketplace/wanted/createWanted.test.ts (14 tests) 24ms
 ✓ tests/unit/composables/useCategories.test.ts (19 tests) 20ms
stderr | tests/unit/composables/useCurrencyExchange.test.ts > useCurrencyExchange > getUSDRate > should return null on API error
Currency conversion failed for EUR: Error: Network error
    at [90m/home/yka/dev/bsf_market/main/[39mtests/unit/composables/useCurrencyExchange.test.ts:142:39
    at [90mfile:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m

stderr | tests/unit/composables/useCurrencyExchange.test.ts > useCurrencyExchange > getUSDRate > should handle timeout properly
Currency conversion failed for EUR: Error: AbortError
    at AbortSignal.<anonymous> [90m(/home/yka/dev/bsf_market/main/[39mtests/unit/composables/useCurrencyExchange.test.ts:187:22[90m)[39m
    at AbortSignal.callTheUserObjectsOperation [90m(/home/yka/dev/bsf_market/main/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/yka/dev/bsf_market/main/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:360:16[90m)[39m
    at invokeEventListeners [90m(/home/yka/dev/bsf_market/main/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:296:3[90m)[39m
    at AbortSignalImpl._dispatch [90m(/home/yka/dev/bsf_market/main/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:243:9[90m)[39m
    at fireAnEvent [90m(/home/yka/dev/bsf_market/main/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/helpers/events.js:18:36[90m)[39m
    at AbortSignalImpl._runAbortStep [90m(/home/yka/dev/bsf_market/main/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/aborting/AbortSignal-impl.js:112:5[90m)[39m
    at AbortSignalImpl._signalAbort [90m(/home/yka/dev/bsf_market/main/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/aborting/AbortSignal-impl.js:99:10[90m)[39m
    at AbortControllerImpl.abort [90m(/home/yka/dev/bsf_market/main/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/aborting/AbortController-impl.js:11:17[90m)[39m
    at AbortController.abort [90m(/home/yka/dev/bsf_market/main/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/AbortController.js:112:34[90m)[39m

stderr | tests/unit/composables/useCurrencyExchange.test.ts > useCurrencyExchange > getUSDRate > should handle invalid cache data gracefully
Failed to save exchange rate to cache: SyntaxError: Unexpected token 'i', "invalid-json" is not valid JSON
    at JSON.parse (<anonymous>)
    at saveToCache [90m(/home/yka/dev/bsf_market/main/[39mapp/composables/useCurrencyExchange.ts:129:16[90m)[39m
    at fetchRateWithCache [90m(/home/yka/dev/bsf_market/main/[39mapp/composables/useCurrencyExchange.ts:88:9[90m)[39m
    at getUSDRate [90m(/home/yka/dev/bsf_market/main/[39mapp/composables/useCurrencyExchange.ts:38:22[90m)[39m
    at [90m/home/yka/dev/bsf_market/main/[39mtests/unit/composables/useCurrencyExchange.test.ts:230:20
    at [90mfile:///home/yka/dev/bsf_market/main/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:20

 ✓ tests/unit/composables/useCurrencyExchange.test.ts (12 tests) 33ms
 ✓ tests/unit/composables/useHelpTopic.test.ts (43 tests) 18ms
 ✓ tests/unit/features/usd-conversion-feature-flag.test.ts (10 tests) 12ms
stderr | tests/unit/utils/regex-validation.test.ts > Regex Validation > isValidRegex > detects ReDoS vulnerable patterns
Potentially dangerous regex pattern detected
Potentially dangerous regex pattern detected
Potentially dangerous regex pattern detected
Potentially dangerous regex pattern detected

stderr | tests/unit/utils/regex-validation.test.ts > Regex Validation > createSafeRegex > returns null for invalid patterns
Potentially dangerous regex pattern detected

 ✓ tests/unit/utils/regex-validation.test.ts (21 tests) 18ms
stderr | tests/unit/pages/product-translation.test.ts > Product Detail Translation > should translate product description
Not implemented: Window's open() method

stderr | tests/unit/pages/product-translation.test.ts > Product Detail Translation > should cache translations
Not implemented: Window's open() method

stderr | tests/unit/pages/product-translation.test.ts > Product Detail Translation > should cache translations
Not implemented: Window's open() method

stderr | tests/unit/pages/product-translation.test.ts > Product Detail Translation > should sanitize translated content
Not implemented: Window's open() method

 ✓ tests/unit/pages/product-translation.test.ts (5 tests) 10ms
 ✓ tests/unit/marketplace/wanted/type-guards.test.ts (16 tests) 10ms
 ✓ tests/unit/composables/useAuth.test.ts (3 tests) 7ms

⎯⎯⎯⎯⎯⎯ Failed Suites 4 ⎯⎯⎯⎯⎯⎯⎯

 FAIL  tests/unit/components/UnifiedSearchFilter.test.ts [ tests/unit/components/UnifiedSearchFilter.test.ts ]
Error: Failed to resolve import "#imports" from "app/composables/useCountries.ts". Does the file exist?
  Plugin: vite:import-analysis
  File: /home/yka/dev/bsf_market/main/app/composables/useCountries.ts:2:24
  1  |  import { computed } from "vue";
  2  |  import { useI18n } from "#imports";
     |                           ^
  3  |  export const useCountries = () => {
  4  |    const { t, locale } = useI18n();
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-DZ2tZksn.js:31435:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-DZ2tZksn.js:31432:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-DZ2tZksn.js:29978:18
 ❯ node_modules/vite/dist/node/chunks/dep-DZ2tZksn.js:30036:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-DZ2tZksn.js:30004:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-DZ2tZksn.js:31249:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-DZ2tZksn.js:26419:26

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/112]⎯

 FAIL  tests/unit/pages/createProduct.test.ts [ tests/unit/pages/createProduct.test.ts ]
Error: Failed to resolve import "#imports" from "app/utils/translatedConstants.ts". Does the file exist?
  Plugin: vite:import-analysis
  File: /home/yka/dev/bsf_market/main/app/utils/translatedConstants.ts:1:24
  1  |  import { useI18n } from "#imports";
     |                           ^
  2  |  export function getTranslatedUnits() {
  3  |    const { t } = useI18n();
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-DZ2tZksn.js:31435:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-DZ2tZksn.js:31432:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-DZ2tZksn.js:29978:18
 ❯ node_modules/vite/dist/node/chunks/dep-DZ2tZksn.js:30036:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-DZ2tZksn.js:30004:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-DZ2tZksn.js:31249:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-DZ2tZksn.js:26419:26

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/112]⎯

 FAIL  tests/unit/pages/market/index.test.ts [ tests/unit/pages/market/index.test.ts ]
 FAIL  tests/unit/pages/wanted/index.test.ts [ tests/unit/pages/wanted/index.test.ts ]
Error: Failed to resolve import "#imports" from "app/composables/useCountries.ts". Does the file exist?
  Plugin: vite:import-analysis
  File: /home/yka/dev/bsf_market/main/app/composables/useCountries.ts:2:24
  1  |  import { computed } from "vue";
  2  |  import { useI18n } from "#imports";
     |                           ^
  3  |  export const useCountries = () => {
  4  |    const { t, locale } = useI18n();
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-DZ2tZksn.js:31435:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-DZ2tZksn.js:31432:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-DZ2tZksn.js:29978:18
 ❯ node_modules/vite/dist/node/chunks/dep-DZ2tZksn.js:30036:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-DZ2tZksn.js:30004:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-DZ2tZksn.js:31249:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-DZ2tZksn.js:26419:26

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/112]⎯


⎯⎯⎯⎯⎯⎯ Failed Tests 108 ⎯⎯⎯⎯⎯⎯

 FAIL  tests/unit/composables/useMyListings.test.ts > useMyListings > fetchProducts > should handle non-Error exceptions
AssertionError: expected 'errors.market.loadProductsFailed' to be 'Failed to load products' // Object.is equality

Expected: [32m"[7mFailed to [27mload[7m p[27mroducts"[39m
Received: [31m"[7merrors.market.[27mload[7mP[27mroducts[7mFailed[27m"[39m

 ❯ tests/unit/composables/useMyListings.test.ts:103:35
    101|       const { fetchProducts, productsError } = useMyListings()
    102|       await fetchProducts()
    103|       expect(productsError.value).toBe('Failed to load products')
       |                                   ^
    104|     })
    105|     it('should set loading state correctly', async () => {

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/112]⎯

 FAIL  tests/unit/composables/useMyListings.test.ts > useMyListings > fetchWantedItems > should handle non-Error exceptions
AssertionError: expected 'errors.wanted.loadFailed' to be 'Failed to load wanted items' // Object.is equality

Expected: [32m"Failed to load wanted items"[39m
Received: [31m"errors.wanted.loadFailed"[39m

 ❯ tests/unit/composables/useMyListings.test.ts:178:33
    176|       const { fetchWantedItems, wantedError } = useMyListings()
    177|       await fetchWantedItems()
    178|       expect(wantedError.value).toBe('Failed to load wanted items')
       |                                 ^
    179|     })
    180|     it('should set loading state correctly', async () => {

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/112]⎯

 FAIL  tests/unit/composables/useMyListings.test.ts > useMyListings > deleteProduct > should console.error on delete failure
AssertionError: expected "error" to be called with arguments: [ 'Failed to delete product:', …(1) ][90m

Received: 

[1m  1st error call:

[22m[2m  [[22m
[32m-   "Failed to delete product:",[90m
[31m+   "errors.product.deleteFailedLog",[90m
[2m    Error {[22m
[2m      "message": "Delete error",[22m
[2m    },[22m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
 ❯ tests/unit/composables/useMyListings.test.ts:236:26
    234|         
    235|       }
    236|       expect(consoleSpy).toHaveBeenCalledWith(
       |                          ^
    237|         'Failed to delete product:',
    238|         error

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[6/112]⎯

 FAIL  tests/unit/composables/useMyListings.test.ts > useMyListings > deleteWantedItem > should console.error on delete failure
AssertionError: expected "error" to be called with arguments: [ …(2) ][90m

Received: 

[1m  1st error call:

[22m[2m  [[22m
[32m-   "Failed to delete wanted item:",[90m
[31m+   "errors.wanted.deleteFailedLog",[90m
[2m    Error {[22m
[2m      "message": "Delete error",[22m
[2m    },[22m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
 ❯ tests/unit/composables/useMyListings.test.ts:287:26
    285|         
    286|       }
    287|       expect(consoleSpy).toHaveBeenCalledWith(
       |                          ^
    288|         'Failed to delete wanted item:',
    289|         error

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[7/112]⎯

 FAIL  tests/unit/composables/useTranslation.test.ts > useTranslation > Provider Tests > should translate successfully with LibreTranslate
AssertionError: expected 'Opening Google Translate in new tab...' to be 'Hola mundo' // Object.is equality

Expected: [32m"Hola mundo"[39m
Received: [31m"Opening Google Translate in new tab..."[39m

 ❯ tests/unit/composables/useTranslation.test.ts:58:22
     56|       const result = await translate('Hello world', 'en', 'es')
     57| 
     58|       expect(result).toBe('Hola mundo')
       |                      ^
     59|       expect(global.fetch).toHaveBeenCalledWith(
     60|         'https://libretranslate.com/translate',

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[8/112]⎯

 FAIL  tests/unit/composables/useTranslation.test.ts > useTranslation > Provider Tests > should translate successfully with MyMemory
AssertionError: expected 'Opening Google Translate in new tab...' to be 'Bonjour le monde' // Object.is equality

Expected: [32m"Bonjour le monde"[39m
Received: [31m"Opening Google Translate in new tab..."[39m

 ❯ tests/unit/composables/useTranslation.test.ts:89:22
     87|       const result = await translate('Hello world', 'en', 'fr')
     88| 
     89|       expect(result).toBe('Bonjour le monde')
       |                      ^
     90|       expect(global.fetch).toHaveBeenCalledTimes(2)
     91|       const lastCall = (global.fetch as any).mock.calls[1][0]

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[9/112]⎯

 FAIL  tests/unit/composables/useTranslation.test.ts > useTranslation > Provider Tests > should sanitize HTML tags from translation
AssertionError: expected 'Opening Google Translate in new tab...' to be 'Hola mundo' // Object.is equality

Expected: [32m"Hola mundo"[39m
Received: [31m"Opening Google Translate in new tab..."[39m

 ❯ tests/unit/composables/useTranslation.test.ts:108:22
    106| 
    107|       // DOMPurify removes script content entirely
    108|       expect(result).toBe('Hola mundo')
       |                      ^
    109|       expect(result).not.toContain('<script>')
    110|       expect(result).not.toContain('</script>')

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[10/112]⎯

 FAIL  tests/unit/composables/useTranslation.test.ts > useTranslation > Fallback Chain Tests > should fallback to MyMemory when LibreTranslate fails
AssertionError: expected 'Opening Google Translate in new tab...' to be 'Translation from MyMemory' // Object.is equality

Expected: [32m"Translation from MyMemory"[39m
Received: [31m"Opening Google Translate in new tab..."[39m

 ❯ tests/unit/composables/useTranslation.test.ts:133:22
    131|       const result = await translate('Test text', 'en', 'es')
    132| 
    133|       expect(result).toBe('Translation from MyMemory')
       |                      ^
    134|       expect(global.fetch).toHaveBeenCalledTimes(2)
    135|     })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[11/112]⎯

 FAIL  tests/unit/composables/useTranslation.test.ts > useTranslation > Fallback Chain Tests > should fallback to clipboard when all APIs fail
AssertionError: promise resolved "'Opening Google Translate in new tab...'" instead of rejecting

[32m- Expected:[39m 
Error {
  "message": "rejected promise",
}

[31m+ Received:[39m 
"Opening Google Translate in new tab..."

 ❯ tests/unit/composables/useTranslation.test.ts:147:54
    145| 
    146|       // Now throws error instead of returning message
    147|       await expect(translate('Test text', 'en', 'es')).rejects.toThrow…
       |                                                      ^
    148|       expect(mockClipboard.writeText).toHaveBeenCalledWith('Test text')
    149|       expect(error.value).toBe('Text copied! Paste in Google Translate…

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[12/112]⎯

 FAIL  tests/unit/composables/useTranslation.test.ts > useTranslation > Fallback Chain Tests > should handle provider rate limit and try next
AssertionError: expected 'Opening Google Translate in new tab...' to be 'MyMemory translation' // Object.is equality

Expected: [32m"MyMemory translation"[39m
Received: [31m"Opening Google Translate in new tab..."[39m

 ❯ tests/unit/composables/useTranslation.test.ts:170:22
    168|       const result = await translate('Test', 'en', 'es')
    169| 
    170|       expect(result).toBe('MyMemory translation')
       |                      ^
    171|       // Should only call MyMemory (LibreTranslate skipped)
    172|       expect(global.fetch).toHaveBeenCalledTimes(1)

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[13/112]⎯

 FAIL  tests/unit/composables/useTranslation.test.ts > useTranslation > Rate Limiting Tests > should reset rate limit after time window
AssertionError: expected 'Opening Google Translate in new tab...' to be 'Translation' // Object.is equality

Expected: [32m"Translation"[39m
Received: [31m"Opening Google Translate in new tab..."[39m

 ❯ tests/unit/composables/useTranslation.test.ts:215:22
    213|       const result = await translate('Test', 'en', 'es')
    214| 
    215|       expect(result).toBe('Translation')
       |                      ^
    216|     })
    217| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[14/112]⎯

 FAIL  tests/unit/composables/useTranslation.test.ts > useTranslation > Rate Limiting Tests > should track provider-specific rate limits
AssertionError: expected 'Opening Google Translate in new tab...' to be 'LibreTranslate result' // Object.is equality

Expected: [32m"LibreTranslate result"[39m
Received: [31m"Opening Google Translate in new tab..."[39m

 ❯ tests/unit/composables/useTranslation.test.ts:235:22
    233| 
    234|       // Should use LibreTranslate since MyMemory is rate limited
    235|       expect(result).toBe('LibreTranslate result')
       |                      ^
    236|       expect(global.fetch).toHaveBeenCalledWith(
    237|         'https://libretranslate.com/translate',

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[15/112]⎯

 FAIL  tests/unit/composables/useTranslation.test.ts > useTranslation > Cache Tests > should fetch from API on cache miss
AssertionError: expected 'Opening Google Translate in new tab...' to be 'Fresh translation' // Object.is equality

Expected: [32m"Fresh translation"[39m
Received: [31m"Opening Google Translate in new tab..."[39m

 ❯ tests/unit/composables/useTranslation.test.ts:278:22
    276|       const result = await translate('New text', 'en', 'es')
    277| 
    278|       expect(result).toBe('Fresh translation')
       |                      ^
    279|       expect(global.fetch).toHaveBeenCalled()
    280|     })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[16/112]⎯

 FAIL  tests/unit/composables/useTranslation.test.ts > useTranslation > Cache Tests > should expire cache after 24 hours
AssertionError: expected 'Opening Google Translate in new tab...' to be 'New translation' // Object.is equality

Expected: [32m"New translation"[39m
Received: [31m"Opening Google Translate in new tab..."[39m

 ❯ tests/unit/composables/useTranslation.test.ts:310:22
    308|       const result = await translate('Old text', 'en', 'es')
    309| 
    310|       expect(result).toBe('New translation')
       |                      ^
    311|       expect(global.fetch).toHaveBeenCalled()
    312|       expect(localStorageMock.removeItem).toHaveBeenCalledWith(cacheKe…

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[17/112]⎯

 FAIL  tests/unit/composables/useTranslation.test.ts > useTranslation > Cache Tests > should cache new translations
AssertionError: expected "spy" to be called with arguments: [ …(2) ][90m

Received: 

[1m  1st spy call:

[22m[2m  [[22m
[32m-   "trans_en_es_-368905450_Cacheme",[90m
[32m-   StringContaining "To cache",[90m
[31m+   "user_translation_limit",[90m
[31m+   "{\"count\":1,\"resetTime\":1759325914643}",[90m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
 ❯ tests/unit/composables/useTranslation.test.ts:336:40
    334|       const cacheKey = `trans_en_es_${hash}_${textPreview}`
    335| 
    336|       expect(localStorageMock.setItem).toHaveBeenCalledWith(
       |                                        ^
    337|         cacheKey,
    338|         expect.stringContaining('To cache')

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[18/112]⎯

 FAIL  tests/unit/composables/useTranslation.test.ts > useTranslation > Validation Tests > should handle valid text at max length
AssertionError: expected 'Opening Google Translate in new tab...' to be 'Translation' // Object.is equality

Expected: [32m"Translation"[39m
Received: [31m"Opening Google Translate in new tab..."[39m

 ❯ tests/unit/composables/useTranslation.test.ts:374:22
    372|       const result = await translate(maxText, 'en', 'es')
    373| 
    374|       expect(result).toBe('Translation')
       |                      ^
    375|     })
    376| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[19/112]⎯

 FAIL  tests/unit/composables/useTranslation.test.ts > useTranslation > Validation Tests > should use default language codes when not provided
AssertionError: expected "spy" to be called with arguments: [ …(2) ][90m

Number of calls: [1m0[22m
[39m
 ❯ tests/unit/composables/useTranslation.test.ts:386:28
    384|       await translate('Test')
    385| 
    386|       expect(global.fetch).toHaveBeenCalledWith(
       |                            ^
    387|         'https://libretranslate.com/translate',
    388|         expect.objectContaining({

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[20/112]⎯

 FAIL  tests/unit/composables/useTranslation.test.ts > useTranslation > Security Tests > should strip all HTML tags
AssertionError: expected 'Opening Google Translate in new tab...' to be 'ParagraphBoldItalic' // Object.is equality

Expected: [32m"ParagraphBoldItalic"[39m
Received: [31m"Opening Google Translate in new tab..."[39m

 ❯ tests/unit/composables/useTranslation.test.ts:439:22
    437|       const result = await translate('Test', 'en', 'es')
    438| 
    439|       expect(result).toBe('ParagraphBoldItalic')
       |                      ^
    440|       expect(result).not.toContain('<')
    441|       expect(result).not.toContain('>')

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[21/112]⎯

 FAIL  tests/unit/composables/useTranslation.test.ts > useTranslation > Security Tests > should handle malicious scripts in nested tags
AssertionError: expected 'Opening Google Translate in new tab...' to be 'Text' // Object.is equality

Expected: [32m"Text"[39m
Received: [31m"Opening Google Translate in new tab..."[39m

 ❯ tests/unit/composables/useTranslation.test.ts:455:22
    453| 
    454|       // DOMPurify removes all script content
    455|       expect(result).toBe('Text')
       |                      ^
    456|       expect(result).not.toContain('script')
    457|       expect(result).not.toContain('alert')

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[22/112]⎯

 FAIL  tests/unit/composables/useTranslation.test.ts > useTranslation > Error Handling Tests > should handle network failures gracefully
AssertionError: expected 'Opening Google Translate in new tab...' to be 'Text copied! Paste in Google Translate' // Object.is equality

Expected: [32m"[7mText copied! Paste [27min Google Translate"[39m
Received: [31m"[7mOpen[27min[7mg[27m Google Translate[7m in new tab...[27m"[39m

 ❯ tests/unit/composables/useTranslation.test.ts:472:22
    470|       const result = await translate('Test', 'en', 'es')
    471| 
    472|       expect(result).toBe('Text copied! Paste in Google Translate')
       |                      ^
    473|       expect(error.value).toBe('Text copied! Paste in Google Translate…
    474|     })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[23/112]⎯

 FAIL  tests/unit/composables/useTranslation.test.ts > useTranslation > Error Handling Tests > should handle API timeout
AssertionError: expected 'Opening Google Translate in new tab...' to be 'Fallback translation' // Object.is equality

Expected: [32m"Fallback translation"[39m
Received: [31m"Opening Google Translate in new tab..."[39m

 ❯ tests/unit/composables/useTranslation.test.ts:498:22
    496|       const result = await translate('Test', 'en', 'es')
    497| 
    498|       expect(result).toBe('Fallback translation')
       |                      ^
    499|     })
    500| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[24/112]⎯

 FAIL  tests/unit/composables/useTranslation.test.ts > useTranslation > Error Handling Tests > should handle invalid API responses
AssertionError: expected 'Opening Google Translate in new tab...' to be 'Valid response' // Object.is equality

Expected: [32m"Valid response"[39m
Received: [31m"Opening Google Translate in new tab..."[39m

 ❯ tests/unit/composables/useTranslation.test.ts:518:22
    516|       const result = await translate('Test', 'en', 'es')
    517| 
    518|       expect(result).toBe('Valid response')
       |                      ^
    519|     })
    520| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[25/112]⎯

 FAIL  tests/unit/composables/useTranslation.test.ts > useTranslation > Error Handling Tests > should handle MyMemory API errors
AssertionError: expected 'Opening Google Translate in new tab...' to be 'Text copied! Paste in Google Translate' // Object.is equality

Expected: [32m"[7mText copied! Paste [27min Google Translate"[39m
Received: [31m"[7mOpen[27min[7mg[27m Google Translate[7m in new tab...[27m"[39m

 ❯ tests/unit/composables/useTranslation.test.ts:537:22
    535|       const result = await translate('Test', 'xx', 'yy')
    536| 
    537|       expect(result).toBe('Text copied! Paste in Google Translate')
       |                      ^
    538|     })
    539| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[26/112]⎯

 FAIL  tests/unit/composables/useTranslation.test.ts > useTranslation > Error Handling Tests > should handle JSON parse errors
AssertionError: expected 'Opening Google Translate in new tab...' to be 'Fallback' // Object.is equality

Expected: [32m"Fallback"[39m
Received: [31m"Opening Google Translate in new tab..."[39m

 ❯ tests/unit/composables/useTranslation.test.ts:557:22
    555|       const result = await translate('Test', 'en', 'es')
    556| 
    557|       expect(result).toBe('Fallback')
       |                      ^
    558|     })
    559|   })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[27/112]⎯

 FAIL  tests/unit/composables/useTranslation.test.ts > useTranslation > State Management > should track isTranslating state correctly
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ tests/unit/composables/useTranslation.test.ts:577:35
    575| 
    576|       const promise = translate('Test', 'en', 'es')
    577|       expect(isTranslating.value).toBe(true)
       |                                   ^
    578| 
    579|       vi.advanceTimersByTime(101)

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[28/112]⎯

 FAIL  tests/unit/composables/useTranslation.test.ts > useTranslation > Clipboard Fallback > should use document.execCommand when clipboard API fails
AssertionError: expected 'Opening Google Translate in new tab...' to be 'Text copied! Paste in Google Translate' // Object.is equality

Expected: [32m"[7mText copied! Paste [27min Google Translate"[39m
Received: [31m"[7mOpen[27min[7mg[27m Google Translate[7m in new tab...[27m"[39m

 ❯ tests/unit/composables/useTranslation.test.ts:642:22
    640|       const result = await translate('Test text', 'en', 'es')
    641| 
    642|       expect(result).toBe('Text copied! Paste in Google Translate')
       |                      ^
    643|       expect(createElement).toHaveBeenCalledWith('textarea')
    644|       expect(mockTextarea.value).toBe('Test text')

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[29/112]⎯

 FAIL  tests/unit/composables/useTranslation.test.ts > useTranslation > Integration Tests > should handle concurrent translations correctly
AssertionError: expected 'Opening Google Translate in new tab...' to be 'Translation 1' // Object.is equality

Expected: [32m"Translation 1"[39m
Received: [31m"Opening Google Translate in new tab..."[39m

 ❯ tests/unit/composables/useTranslation.test.ts:681:23
    679|       ])
    680| 
    681|       expect(result1).toBe('Translation 1')
       |                       ^
    682|       expect(result2).toBe('Translation 2')
    683|       expect(result3).toBe('Translation 3')

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[30/112]⎯

 FAIL  tests/unit/composables/useTranslation.test.ts > useTranslation > Integration Tests > should respect cache for duplicate requests
AssertionError: expected 'Opening Google Translate in new tab...' to be 'First call' // Object.is equality

Expected: [32m"First call"[39m
Received: [31m"Opening Google Translate in new tab..."[39m

 ❯ tests/unit/composables/useTranslation.test.ts:698:23
    696|       const result2 = await translate('Same text', 'en', 'es')
    697| 
    698|       expect(result1).toBe('First call')
       |                       ^
    699|       expect(result2).toBe('First call')
    700|       expect(global.fetch).toHaveBeenCalledTimes(1) // Only one API ca…

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[31/112]⎯

 FAIL  tests/unit/composables/useTranslation.test.ts > useTranslation > Integration Tests > should handle different language pairs separately
AssertionError: expected 'Opening Google Translate in new tab...' to be 'Translation 1' // Object.is equality

Expected: [32m"Translation 1"[39m
Received: [31m"Opening Google Translate in new tab..."[39m

 ❯ tests/unit/composables/useTranslation.test.ts:721:23
    719|       const result3 = await translate('Hello', 'en', 'es') // Cached
    720| 
    721|       expect(result1).toBe('Translation 1')
       |                       ^
    722|       expect(result2).toBe('Translation 2')
    723|       expect(result3).toBe('Translation 1') // From cache

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[32/112]⎯

 FAIL  tests/unit/marketplace/useMarketplace.test.ts > useMarketplace > fetchProducts > should handle rate limiting with custom message
AssertionError: expected 'errors.rateLimit' to be 'Too many requests. Please wait a mome…' // Object.is equality

Expected: [32m"Too many requests. Please wait a moment and try again."[39m
Received: [31m"errors.rateLimit"[39m

 ❯ tests/unit/marketplace/useMarketplace.test.ts:128:48
    126|       mockRepository.getProducts.mockRejectedValue(rateLimitError)
    127|       await marketplace.fetchProducts()
    128|       expect(marketplace.error.value?.message).toBe(
       |                                                ^
    129|         'Too many requests. Please wait a moment and try again.'
    130|       )

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[33/112]⎯

 FAIL  tests/unit/pages/createWanted.test.ts > CreateWantedPage > Country selection buttons for wanted > should select all countries in wanted form
AssertionError: expected "spy" to be called with arguments: [ 'countries', …(1) ][90m

Number of calls: [1m0[22m
[39m
 ❯ tests/unit/pages/createWanted.test.ts:402:38
    400|       await selectAllButton?.trigger('click')
    401|       await nextTick()
    402|       expect(lastForm.setFieldValue).toHaveBeenCalledWith(
       |                                      ^
    403|         'countries',
    404|         ['US', 'CA', 'GB', 'JP']

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[34/112]⎯

 FAIL  tests/unit/pages/createWanted.test.ts > CreateWantedPage > Country selection buttons for wanted > should handle 250 countries selection in wanted
AssertionError: expected "spy" to be called with arguments: [ 'countries', …(1) ][90m

Number of calls: [1m0[22m
[39m
 ❯ tests/unit/pages/createWanted.test.ts:481:38
    479|       await selectAllButton?.trigger('click')
    480|       await nextTick()
    481|       expect(lastForm.setFieldValue).toHaveBeenCalledWith(
       |                                      ^
    482|         'countries',
    483|         manyCountries.map(c => c.code)

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[35/112]⎯

 FAIL  tests/unit/pages/createWanted.test.ts > CreateWantedPage > Country selection buttons for wanted > should maintain selected countries during edit mode
AssertionError: expected "spy" to be called with arguments: [ 'countries', [ 'US', 'CA', 'MX' ] ][90m

Received: 

[1m  1st spy call:

[22m[2m  [[22m
[2m    "countries",[22m
[2m    [[22m
[2m      "US",[22m
[2m      "CA",[22m
[32m-     "MX",[90m
[2m    ],[22m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
 ❯ tests/unit/pages/createWanted.test.ts:507:38
    505|       )
    506|       await selectAllButton?.trigger('click')
    507|       expect(lastForm.setFieldValue).toHaveBeenCalledWith(
       |                                      ^
    508|         'countries',
    509|         ['US', 'CA', 'MX']

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[36/112]⎯

 FAIL  tests/unit/pages/main.test.ts > MainPage > Navigation Functionality > should handle navigation errors gracefully
AssertionError: expected "error" to be called with arguments: [ 'Navigation error:', Any<Error> ][90m

Received: 

[1m  1st error call:

[22m[2m  [[22m
[32m-   "Navigation error:",[90m
[32m-   Any<Error>,[90m
[31m+   "errors.navigationErrorLog",[90m
[31m+   Error {[90m
[31m+     "message": "Navigation failed",[90m
[31m+   },[90m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
 ❯ tests/unit/pages/main.test.ts:297:31
    295|       await buttons[0].trigger('click')
    296|       await nextTick()
    297|       expect(consoleErrorSpy).toHaveBeenCalledWith(
       |                               ^
    298|         'Navigation error:',
    299|         expect.any(Error)

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[37/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Component Rendering > should display back button with correct href
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ tests/unit/pages/messages-detail.test.ts:144:35
    142|       const wrapper = createWrapper()
    143|       const backButton = wrapper.find('.ion-back-button')
    144|       expect(backButton.exists()).toBe(true)
       |                                   ^
    145|       expect(backButton.attributes('default-href')).toBe('/en/messages…
    146|     })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[38/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Component Rendering > should display conversation title
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ tests/unit/pages/messages-detail.test.ts:152:30
    150|       await nextTick()
    151|       const title = wrapper.find('.ion-title')
    152|       expect(title.exists()).toBe(true)
       |                              ^
    153|       expect(title.text()).toBe('Tech Solutions Inc.')
    154|     })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[39/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Component Rendering > should display buyer company name as title when user is owner
Error: Cannot call text on an empty DOMWrapper.
 ❯ Object.get node_modules/@vue/test-utils/dist/vue-test-utils.cjs.js:1574:27
    1572|                     return function () { return false; };
    1573|                 default:
    1574|                     throw new Error("Cannot call ".concat(String(prop)…
       |                           ^
    1575|             }
    1576|         }
 ❯ tests/unit/pages/messages-detail.test.ts:161:20

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[40/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Loading State > should show loading spinner when loading
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ tests/unit/pages/messages-detail.test.ts:170:32
    168|       const wrapper = createWrapper()
    169|       const spinner = wrapper.find('.ion-spinner')
    170|       expect(spinner.exists()).toBe(true)
       |                                ^
    171|       expect(wrapper.html()).toContain('messaging.loadingConversation')
    172|     })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[41/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Error State > should show retry button on error
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ tests/unit/pages/messages-detail.test.ts:194:36
    192|       const wrapper = createWrapper()
    193|       const retryButton = wrapper.find('.ion-button')
    194|       expect(retryButton.exists()).toBe(true)
       |                                    ^
    195|       expect(retryButton.text()).toBe('common.retry')
    196|     })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[42/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Error State > should retry loading when retry button clicked
Error: Cannot call trigger on an empty DOMWrapper.
 ❯ Object.get node_modules/@vue/test-utils/dist/vue-test-utils.cjs.js:1574:27
    1572|                     return function () { return false; };
    1573|                 default:
    1574|                     throw new Error("Cannot call ".concat(String(prop)…
       |                           ^
    1575|             }
    1576|         }
 ❯ tests/unit/pages/messages-detail.test.ts:202:25

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[43/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Product Info Card > should display product info card
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ tests/unit/pages/messages-detail.test.ts:220:36
    218|       await nextTick()
    219|       const productCard = wrapper.find('.product-info-card')
    220|       expect(productCard.exists()).toBe(true)
       |                                    ^
    221|     })
    222| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[44/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Product Info Card > should display product type chip for market listing
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ tests/unit/pages/messages-detail.test.ts:233:29
    231|       await nextTick()
    232|       const chip = wrapper.find('.ion-chip')
    233|       expect(chip.exists()).toBe(true)
       |                             ^
    234|       expect(chip.attributes('color')).toBe('secondary')
    235|       expect(chip.text()).toContain('messaging.marketListing')

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[45/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Product Info Card > should display product type chip for wanted listing
Error: Cannot call attributes on an empty DOMWrapper.
 ❯ Object.get node_modules/@vue/test-utils/dist/vue-test-utils.cjs.js:1574:27
    1572|                     return function () { return false; };
    1573|                 default:
    1574|                     throw new Error("Cannot call ".concat(String(prop)…
       |                           ^
    1575|             }
    1576|         }
 ❯ tests/unit/pages/messages-detail.test.ts:243:19

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[46/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Product Info Card > should display product thumbnail
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ tests/unit/pages/messages-detail.test.ts:251:34
    249|       await nextTick()
    250|       const thumbnail = wrapper.find('.product-info-card .ion-thumbnai…
    251|       expect(thumbnail.exists()).toBe(true)
       |                                  ^
    252|       const img = thumbnail.find('img')
    253|       expect(img.exists()).toBe(true)

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[47/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Messages Display > should display messages in chronological order
TypeError: Cannot read properties of undefined (reading 'text')
 ❯ tests/unit/pages/messages-detail.test.ts:270:30
    268|       await nextTick()
    269|       const messageTexts = wrapper.findAll('.message-text')
    270|       expect(messageTexts[0].text()).toContain('Hello, I am interested…
       |                              ^
    271|       expect(messageTexts[1].text()).toContain('Thank you for your int…
    272|     })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[48/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Messages Display > should apply correct styling classes for sent messages
AssertionError: expected [ 'message', 'sent' ] to include 'message-sent'
 ❯ tests/unit/pages/messages-detail.test.ts:279:37
    277|       const messages = wrapper.findAll('.message')
    278|       const sentMessage = messages[0]
    279|       expect(sentMessage.classes()).toContain('message-sent')
       |                                     ^
    280|     })
    281| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[49/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Messages Display > should apply correct styling classes for received messages
AssertionError: expected [ 'message', 'received' ] to include 'message-received'
 ❯ tests/unit/pages/messages-detail.test.ts:288:41
    286|       const messages = wrapper.findAll('.message')
    287|       const receivedMessage = messages[0]
    288|       expect(receivedMessage.classes()).toContain('message-received')
       |                                         ^
    289|     })
    290| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[50/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Messages Display > should display sender name
TypeError: Cannot read properties of undefined (reading 'text')
 ❯ tests/unit/pages/messages-detail.test.ts:295:25
    293|       await nextTick()
    294|       const senders = wrapper.findAll('.message-sender')
    295|       expect(senders[0].text()).toBe('messaging.sender.you')
       |                         ^
    296|       expect(senders[1].text()).toBe('Jane Seller')
    297|     })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[51/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Messages Display > should display message timestamp
AssertionError: expected 0 to be greater than 0
 ❯ tests/unit/pages/messages-detail.test.ts:303:33
    301|       await nextTick()
    302|       const timestamps = wrapper.findAll('.message-time')
    303|       expect(timestamps.length).toBeGreaterThan(0)
       |                                 ^
    304|     })
    305|   })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[52/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Message Bubble Styling > should have message-bubble class
AssertionError: expected 0 to be greater than 0
 ❯ tests/unit/pages/messages-detail.test.ts:312:30
    310|       await nextTick()
    311|       const bubbles = wrapper.findAll('.message-bubble')
    312|       expect(bubbles.length).toBeGreaterThan(0)
       |                              ^
    313|     })
    314| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[53/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Message Bubble Styling > should have different border radius for sent messages
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ tests/unit/pages/messages-detail.test.ts:319:35
    317|       await nextTick()
    318|       const sentBubble = wrapper.find('.message-sent .message-bubble')
    319|       expect(sentBubble.exists()).toBe(true)
       |                                   ^
    320|     })
    321| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[54/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Message Bubble Styling > should have different border radius for received messages
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ tests/unit/pages/messages-detail.test.ts:327:39
    325|       await nextTick()
    326|       const receivedBubble = wrapper.find('.message-received .message-…
    327|       expect(receivedBubble.exists()).toBe(true)
       |                                       ^
    328|     })
    329|   })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[55/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Message Composer > should enable send button when message is typed
Error: wrapper.setValue() cannot be called on ION-TEXTAREA
 ❯ DOMWrapper.setValue node_modules/@vue/test-utils/dist/vue-test-utils.cjs.js:7433:19
    7431|         }
    7432|         else {
    7433|             throw Error("wrapper.setValue() cannot be called on ".conc…
       |                   ^
    7434|         }
    7435|     };
 ❯ tests/unit/pages/messages-detail.test.ts:365:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[56/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Message Composer > should disable send button when sending
Error: Cannot call setValue on an empty DOMWrapper.
 ❯ Object.get node_modules/@vue/test-utils/dist/vue-test-utils.cjs.js:1574:27
    1572|                     return function () { return false; };
    1573|                 default:
    1574|                     throw new Error("Cannot call ".concat(String(prop)…
       |                           ^
    1575|             }
    1576|         }
 ❯ tests/unit/pages/messages-detail.test.ts:376:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[57/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Message Composer > should show spinner when sending
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ tests/unit/pages/messages-detail.test.ts:387:32
    385|       await nextTick()
    386|       const spinner = wrapper.find('.send-button .ion-spinner')
    387|       expect(spinner.exists()).toBe(true)
       |                                ^
    388|     })
    389| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[58/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Message Composer > should show send icon when not sending
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ tests/unit/pages/messages-detail.test.ts:394:29
    392|       await nextTick()
    393|       const icon = wrapper.find('.send-button .ion-icon')
    394|       expect(icon.exists()).toBe(true)
       |                             ^
    395|       expect(icon.attributes('icon')).toBe('send-icon')
    396|     })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[59/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Character Counter > should display character counter
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ tests/unit/pages/messages-detail.test.ts:418:32
    416|       await nextTick()
    417|       const counter = wrapper.find('.character-count')
    418|       expect(counter.exists()).toBe(true)
       |                                ^
    419|       expect(counter.text()).toBe('0 / 1000')
    420|     })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[60/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Character Counter > should update character counter when typing
Error: wrapper.setValue() cannot be called on ION-TEXTAREA
 ❯ DOMWrapper.setValue node_modules/@vue/test-utils/dist/vue-test-utils.cjs.js:7433:19
    7431|         }
    7432|         else {
    7433|             throw Error("wrapper.setValue() cannot be called on ".conc…
       |                   ^
    7434|         }
    7435|     };
 ❯ tests/unit/pages/messages-detail.test.ts:426:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[61/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Character Counter > should show max character count
Error: wrapper.setValue() cannot be called on ION-TEXTAREA
 ❯ DOMWrapper.setValue node_modules/@vue/test-utils/dist/vue-test-utils.cjs.js:7433:19
    7431|         }
    7432|         else {
    7433|             throw Error("wrapper.setValue() cannot be called on ".conc…
       |                   ^
    7434|         }
    7435|     };
 ❯ tests/unit/pages/messages-detail.test.ts:437:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[62/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Send Message Functionality > should send message when button clicked
Error: wrapper.setValue() cannot be called on ION-TEXTAREA
 ❯ DOMWrapper.setValue node_modules/@vue/test-utils/dist/vue-test-utils.cjs.js:7433:19
    7431|         }
    7432|         else {
    7433|             throw Error("wrapper.setValue() cannot be called on ".conc…
       |                   ^
    7434|         }
    7435|     };
 ❯ tests/unit/pages/messages-detail.test.ts:451:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[63/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Send Message Functionality > should send message on Enter key
Error: wrapper.setValue() cannot be called on ION-TEXTAREA
 ❯ DOMWrapper.setValue node_modules/@vue/test-utils/dist/vue-test-utils.cjs.js:7433:19
    7431|         }
    7432|         else {
    7433|             throw Error("wrapper.setValue() cannot be called on ".conc…
       |                   ^
    7434|         }
    7435|     };
 ❯ tests/unit/pages/messages-detail.test.ts:469:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[64/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Send Message Functionality > should clear message input after sending
Error: wrapper.setValue() cannot be called on ION-TEXTAREA
 ❯ DOMWrapper.setValue node_modules/@vue/test-utils/dist/vue-test-utils.cjs.js:7433:19
    7431|         }
    7432|         else {
    7433|             throw Error("wrapper.setValue() cannot be called on ".conc…
       |                   ^
    7434|         }
    7435|     };
 ❯ tests/unit/pages/messages-detail.test.ts:484:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[65/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Send Message Functionality > should trim message before sending
Error: wrapper.setValue() cannot be called on ION-TEXTAREA
 ❯ DOMWrapper.setValue node_modules/@vue/test-utils/dist/vue-test-utils.cjs.js:7433:19
    7431|         }
    7432|         else {
    7433|             throw Error("wrapper.setValue() cannot be called on ".conc…
       |                   ^
    7434|         }
    7435|     };
 ❯ tests/unit/pages/messages-detail.test.ts:500:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[66/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Send Message Functionality > should reload conversation after sending
Error: wrapper.setValue() cannot be called on ION-TEXTAREA
 ❯ DOMWrapper.setValue node_modules/@vue/test-utils/dist/vue-test-utils.cjs.js:7433:19
    7431|         }
    7432|         else {
    7433|             throw Error("wrapper.setValue() cannot be called on ".conc…
       |                   ^
    7434|         }
    7435|     };
 ❯ tests/unit/pages/messages-detail.test.ts:518:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[67/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Send Message Functionality > should not send empty messages
Error: wrapper.setValue() cannot be called on ION-TEXTAREA
 ❯ DOMWrapper.setValue node_modules/@vue/test-utils/dist/vue-test-utils.cjs.js:7433:19
    7431|         }
    7432|         else {
    7433|             throw Error("wrapper.setValue() cannot be called on ".conc…
       |                   ^
    7434|         }
    7435|     };
 ❯ tests/unit/pages/messages-detail.test.ts:533:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[68/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Lifecycle Hooks > should start polling on mount
AssertionError: expected "spy" to be called 2 times, but got 4 times
 ❯ tests/unit/pages/messages-detail.test.ts:587:38
    585| 
    586|       vi.advanceTimersByTime(10000)
    587|       expect(mockFetchConversations).toHaveBeenCalledTimes(2)
       |                                      ^
    588|       vi.useRealTimers()
    589|     })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[69/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Lifecycle Hooks > should stop polling on unmount
AssertionError: expected "clearInterval" to be called at least once
 ❯ tests/unit/pages/messages-detail.test.ts:598:32
    596| 
    597|       wrapper.unmount()
    598|       expect(clearIntervalSpy).toHaveBeenCalled()
       |                                ^
    599|       vi.useRealTimers()
    600|     })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[70/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Lifecycle Hooks > should stop polling on deactivate
TypeError: Cannot read properties of undefined (reading '0')
 ❯ tests/unit/pages/messages-detail.test.ts:609:27
    607| 
    608|       // Simulate deactivate
    609|       wrapper.vm.$options.onDeactivated[0].call(wrapper.vm)
       |                           ^
    610|       expect(clearIntervalSpy).toHaveBeenCalled()
    611|       vi.useRealTimers()

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[71/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Lifecycle Hooks > should restart polling on activate
TypeError: Cannot read properties of undefined (reading '0')
 ❯ tests/unit/pages/messages-detail.test.ts:620:27
    618|       mockFetchConversations.mockClear()
    619|       // Simulate activate
    620|       wrapper.vm.$options.onActivated[0].call(wrapper.vm)
       |                           ^
    621|       expect(mockFetchConversations).toHaveBeenCalled()
    622|     })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[72/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Message Composer Input Validation > should not allow messages over 1000 characters
Error: wrapper.setValue() cannot be called on ION-TEXTAREA
 ❯ DOMWrapper.setValue node_modules/@vue/test-utils/dist/vue-test-utils.cjs.js:7433:19
    7431|         }
    7432|         else {
    7433|             throw Error("wrapper.setValue() cannot be called on ".conc…
       |                   ^
    7434|         }
    7435|     };
 ❯ tests/unit/pages/messages-detail.test.ts:632:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[73/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Message Composer Input Validation > should disable textarea when sending
Error: Cannot call attributes on an empty DOMWrapper.
 ❯ Object.get node_modules/@vue/test-utils/dist/vue-test-utils.cjs.js:1574:27
    1572|                     return function () { return false; };
    1573|                 default:
    1574|                     throw new Error("Cannot call ".concat(String(prop)…
       |                           ^
    1575|             }
    1576|         }
 ❯ tests/unit/pages/messages-detail.test.ts:644:23

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[74/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Edge Cases > should handle special characters in messages
Error: Cannot call text on an empty DOMWrapper.
 ❯ Object.get node_modules/@vue/test-utils/dist/vue-test-utils.cjs.js:1574:27
    1572|                     return function () { return false; };
    1573|                 default:
    1574|                     throw new Error("Cannot call ".concat(String(prop)…
       |                           ^
    1575|             }
    1576|         }
 ❯ tests/unit/pages/messages-detail.test.ts:686:26

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[75/112]⎯

 FAIL  tests/unit/pages/messages-detail.test.ts > Message Detail Page > Edge Cases > should handle missing user name
Error: Cannot call text on an empty DOMWrapper.
 ❯ Object.get node_modules/@vue/test-utils/dist/vue-test-utils.cjs.js:1574:27
    1572|                     return function () { return false; };
    1573|                 default:
    1574|                     throw new Error("Cannot call ".concat(String(prop)…
       |                           ^
    1575|             }
    1576|         }
 ❯ tests/unit/pages/messages-detail.test.ts:704:21

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[76/112]⎯

 FAIL  tests/unit/pages/messages.test.ts > Messages Page > Conversation List Display > should display last message preview
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ tests/unit/pages/messages.test.ts:158:53
    156|       const wrapper = createWrapper()
    157|       const lastMessageText = wrapper.vm.getLastMessageText(mockConver…
    158|       expect(lastMessageText.startsWith('Seller:')).toBe(true)
       |                                                     ^
    159|       expect(lastMessageText).toContain('Thank you for your interest!')
    160|     })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[77/112]⎯

 FAIL  tests/unit/pages/messages.test.ts > Messages Page > Conversation List Display > should truncate long message previews
AssertionError: expected 'messaging.lastMessagePrefix' to contain '...'

Expected: [32m"..."[39m
Received: [31m"messaging.lastMessagePrefix"[39m

 ❯ tests/unit/pages/messages.test.ts:172:20
    170|       const wrapper = createWrapper()
    171|       const text = wrapper.vm.getLastMessageText(longMessage)
    172|       expect(text).toContain('...')
       |                    ^
    173|       expect(text.length).toBeLessThan(70)
    174|     })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[78/112]⎯

 FAIL  tests/unit/pages/messages.test.ts > Messages Page > Conversation List Display > should show "No messages" for empty conversations
AssertionError: expected 'messaging.noMessages' to be 'No messages' // Object.is equality

Expected: [32m"[7mNo m[27messages"[39m
Received: [31m"[7mmessaging.noM[27messages"[39m

 ❯ tests/unit/pages/messages.test.ts:178:20
    176|       const wrapper = createWrapper()
    177|       const text = wrapper.vm.getLastMessageText(mockEmptyConversation)
    178|       expect(text).toBe('No messages')
       |                    ^
    179|     })
    180|     it('should show correct prefix for buyer messages', () => {

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[79/112]⎯

 FAIL  tests/unit/pages/messages.test.ts > Messages Page > Conversation List Display > should show correct prefix for buyer messages
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ tests/unit/pages/messages.test.ts:191:41
    189|       const wrapper = createWrapper()
    190|       const text = wrapper.vm.getLastMessageText(conversation)
    191|       expect(text.startsWith('Buyer:')).toBe(true)
       |                                         ^
    192|     })
    193|     it('should show correct prefix for seller messages', () => {

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[80/112]⎯

 FAIL  tests/unit/pages/messages.test.ts > Messages Page > Conversation List Display > should show correct prefix for seller messages
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ tests/unit/pages/messages.test.ts:204:42
    202|       const wrapper = createWrapper()
    203|       const text = wrapper.vm.getLastMessageText(conversation)
    204|       expect(text.startsWith('Seller:')).toBe(true)
       |                                          ^
    205|     })
    206|   })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[81/112]⎯

 FAIL  tests/unit/pages/messages.test.ts > Messages Page > Timestamp Formatting > should show "Yesterday" for yesterday's messages
AssertionError: expected 'messaging.relativeTime.yesterday' to be 'Yesterday' // Object.is equality

Expected: [32m"[7mY[27mesterday"[39m
Received: [31m"[7mmessaging.relativeTime.y[27mesterday"[39m

 ❯ tests/unit/pages/messages.test.ts:223:25
    221|       const wrapper = createWrapper()
    222|       const formatted = wrapper.vm.formatTimestamp(yesterday.toISOStri…
    223|       expect(formatted).toBe('Yesterday')
       |                         ^
    224|     })
    225|     it('should show days ago for recent messages', () => {

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[82/112]⎯

 FAIL  tests/unit/pages/messages.test.ts > Messages Page > Timestamp Formatting > should show days ago for recent messages
AssertionError: expected 'messaging.relativeTime.daysAgo' to be '3 days ago' // Object.is equality

Expected: [32m"[7m3 [27mdays[7m a[27mgo"[39m
Received: [31m"[7mmessaging.relativeTime.[27mdays[7mA[27mgo"[39m

 ❯ tests/unit/pages/messages.test.ts:230:25
    228|       const wrapper = createWrapper()
    229|       const formatted = wrapper.vm.formatTimestamp(threeDaysAgo.toISOS…
    230|       expect(formatted).toBe('3 days ago')
       |                         ^
    231|     })
    232|     it('should show full date for old messages', () => {

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[83/112]⎯

 FAIL  tests/unit/pages/messages.test.ts > Messages Page > Empty State > should pass correct props to EmptyStateMessage
Error: Cannot call props on an empty VueWrapper.
 ❯ Object.get node_modules/@vue/test-utils/dist/vue-test-utils.cjs.js:1574:27
    1572|                     return function () { return false; };
    1573|                 default:
    1574|                     throw new Error("Cannot call ".concat(String(prop)…
       |                           ^
    1575|             }
    1576|         }
 ❯ tests/unit/pages/messages.test.ts:286:25

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[84/112]⎯

 FAIL  tests/unit/components/layout/LayoutPrivateFooter.test.ts > PrivateFooter > Component Rendering > should render powered by link
AssertionError: expected 'footer.poweredBy' to be 'Powered by Manna Insect' // Object.is equality

Expected: [32m"Powered by Manna Insect"[39m
Received: [31m"footer.poweredBy"[39m

 ❯ tests/unit/components/layout/LayoutPrivateFooter.test.ts:203:27
    201|       const link = wrapper.find('ion-title a')
    202|       expect(link.exists()).toBe(true)
    203|       expect(link.text()).toBe('Powered by Manna Insect')
       |                           ^
    204|       expect(link.attributes('href')).toBe('https://www.mannainsect.co…
    205|       expect(link.attributes('target')).toBe('_blank')

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[85/112]⎯

 FAIL  tests/unit/components/messaging/MessageSkeleton.test.ts > MessageSkeleton > Component Rendering > should render ion-list container
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ tests/unit/components/messaging/MessageSkeleton.test.ts:31:54
     29|     it('should render ion-list container', () => {
     30|       const wrapper = createWrapper()
     31|       expect(wrapper.find('ion-list-stub').exists()).toBe(true)
       |                                                      ^
     32|     })
     33| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[86/112]⎯

 FAIL  tests/unit/components/messaging/MessageSkeleton.test.ts > MessageSkeleton > Component Rendering > should have correct skeleton structure
AssertionError: expected 0 to be greater than 0
 ❯ tests/unit/components/messaging/MessageSkeleton.test.ts:37:28
     35|       const wrapper = createWrapper()
     36|       const items = wrapper.findAll('ion-item-stub')
     37|       expect(items.length).toBeGreaterThan(0)
       |                            ^
     38|       const firstItem = items[0]
     39|       expect(firstItem.classes()).toContain('skeleton-item')

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[87/112]⎯

 FAIL  tests/unit/components/messaging/MessageSkeleton.test.ts > MessageSkeleton > Default Behavior > should render 3 skeleton items by default
AssertionError: expected [] to have a length of 3 but got +0

[32m- Expected[39m
[31m+ Received[39m

[32m- 3[39m
[31m+ 0[39m

 ❯ tests/unit/components/messaging/MessageSkeleton.test.ts:47:21
     45|       const wrapper = createWrapper()
     46|       const items = wrapper.findAll('ion-item-stub.skeleton-item')
     47|       expect(items).toHaveLength(3)
       |                     ^
     48|     })
     49| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[88/112]⎯

 FAIL  tests/unit/components/messaging/MessageSkeleton.test.ts > MessageSkeleton > Default Behavior > should have unique keys for each skeleton item
AssertionError: expected [] to have a length of 3 but got +0

[32m- Expected[39m
[31m+ Received[39m

[32m- 3[39m
[31m+ 0[39m

 ❯ tests/unit/components/messaging/MessageSkeleton.test.ts:53:21
     51|       const wrapper = createWrapper()
     52|       const items = wrapper.findAll('ion-item-stub')
     53|       expect(items).toHaveLength(3)
       |                     ^
     54|       // Keys are handled internally by Vue v-for
     55|     })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[89/112]⎯

 FAIL  tests/unit/components/messaging/MessageSkeleton.test.ts > MessageSkeleton > Count Prop > should render custom count of skeleton items
AssertionError: expected [] to have a length of 5 but got +0

[32m- Expected[39m
[31m+ Received[39m

[32m- 5[39m
[31m+ 0[39m

 ❯ tests/unit/components/messaging/MessageSkeleton.test.ts:62:21
     60|       const wrapper = createWrapper({ count: 5 })
     61|       const items = wrapper.findAll('ion-item-stub.skeleton-item')
     62|       expect(items).toHaveLength(5)
       |                     ^
     63|     })
     64| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[90/112]⎯

 FAIL  tests/unit/components/messaging/MessageSkeleton.test.ts > MessageSkeleton > Count Prop > should render single skeleton when count is 1
AssertionError: expected [] to have a length of 1 but got +0

[32m- Expected[39m
[31m+ Received[39m

[32m- 1[39m
[31m+ 0[39m

 ❯ tests/unit/components/messaging/MessageSkeleton.test.ts:68:21
     66|       const wrapper = createWrapper({ count: 1 })
     67|       const items = wrapper.findAll('ion-item-stub.skeleton-item')
     68|       expect(items).toHaveLength(1)
       |                     ^
     69|     })
     70| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[91/112]⎯

 FAIL  tests/unit/components/messaging/MessageSkeleton.test.ts > MessageSkeleton > Count Prop > should handle count of 0 (minimum is 1)
AssertionError: expected [] to have a length of 1 but got +0

[32m- Expected[39m
[31m+ Received[39m

[32m- 1[39m
[31m+ 0[39m

 ❯ tests/unit/components/messaging/MessageSkeleton.test.ts:74:21
     72|       const wrapper = createWrapper({ count: 0 })
     73|       const items = wrapper.findAll('ion-item-stub.skeleton-item')
     74|       expect(items).toHaveLength(1)
       |                     ^
     75|     })
     76| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[92/112]⎯

 FAIL  tests/unit/components/messaging/MessageSkeleton.test.ts > MessageSkeleton > Count Prop > should handle negative count (minimum is 1)
AssertionError: expected [] to have a length of 1 but got +0

[32m- Expected[39m
[31m+ Received[39m

[32m- 1[39m
[31m+ 0[39m

 ❯ tests/unit/components/messaging/MessageSkeleton.test.ts:80:21
     78|       const wrapper = createWrapper({ count: -5 })
     79|       const items = wrapper.findAll('ion-item-stub.skeleton-item')
     80|       expect(items).toHaveLength(1)
       |                     ^
     81|     })
     82| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[93/112]⎯

 FAIL  tests/unit/components/messaging/MessageSkeleton.test.ts > MessageSkeleton > Count Prop > should limit to maximum of 10 items
AssertionError: expected [] to have a length of 10 but got +0

[32m- Expected[39m
[31m+ Received[39m

[32m- 10[39m
[31m+ 0[39m

 ❯ tests/unit/components/messaging/MessageSkeleton.test.ts:86:21
     84|       const wrapper = createWrapper({ count: 15 })
     85|       const items = wrapper.findAll('ion-item-stub.skeleton-item')
     86|       expect(items).toHaveLength(10)
       |                     ^
     87|     })
     88| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[94/112]⎯

 FAIL  tests/unit/components/messaging/MessageSkeleton.test.ts > MessageSkeleton > Count Prop > should limit to maximum of 10 items with very large number
AssertionError: expected [] to have a length of 10 but got +0

[32m- Expected[39m
[31m+ Received[39m

[32m- 10[39m
[31m+ 0[39m

 ❯ tests/unit/components/messaging/MessageSkeleton.test.ts:92:21
     90|       const wrapper = createWrapper({ count: 100 })
     91|       const items = wrapper.findAll('ion-item-stub.skeleton-item')
     92|       expect(items).toHaveLength(10)
       |                     ^
     93|     })
     94|   })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[95/112]⎯

 FAIL  tests/unit/components/messaging/MessageSkeleton.test.ts > MessageSkeleton > Skeleton Item Structure > should have thumbnail with start slot
AssertionError: expected 0 to be greater than 0
 ❯ tests/unit/components/messaging/MessageSkeleton.test.ts:108:33
    106|       const wrapper = createWrapper()
    107|       const thumbnails = wrapper.findAll('ion-thumbnail-stub')
    108|       expect(thumbnails.length).toBeGreaterThan(0)
       |                                 ^
    109|       expect(thumbnails[0].attributes('slot')).toBe('start')
    110|     })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[96/112]⎯

 FAIL  tests/unit/components/messaging/MessageSkeleton.test.ts > MessageSkeleton > Skeleton Item Structure > should have avatar skeleton in thumbnail
AssertionError: expected 0 to be greater than 0
 ❯ tests/unit/components/messaging/MessageSkeleton.test.ts:115:33
    113|       const wrapper = createWrapper()
    114|       const thumbnails = wrapper.findAll('ion-thumbnail-stub')
    115|       expect(thumbnails.length).toBeGreaterThan(0)
       |                                 ^
    116|       const skeletons = thumbnails[0].findAll('ion-skeleton-text-stub')
    117|       expect(skeletons.length).toBeGreaterThan(0)

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[97/112]⎯

 FAIL  tests/unit/components/messaging/MessageSkeleton.test.ts > MessageSkeleton > Skeleton Content Structure > should have h2 with skeleton text
AssertionError: expected 0 to be greater than 0
 ❯ tests/unit/components/messaging/MessageSkeleton.test.ts:134:29
    132|       const wrapper = createWrapper()
    133|       const labels = wrapper.findAll('ion-label-stub')
    134|       expect(labels.length).toBeGreaterThan(0)
       |                             ^
    135|       const h2 = labels[0].find('h2')
    136|       expect(h2.exists()).toBe(true)

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[98/112]⎯

 FAIL  tests/unit/components/messaging/MessageSkeleton.test.ts > MessageSkeleton > Skeleton Content Structure > should have two paragraph skeletons
AssertionError: expected 0 to be greater than 0
 ❯ tests/unit/components/messaging/MessageSkeleton.test.ts:145:29
    143|       const wrapper = createWrapper()
    144|       const labels = wrapper.findAll('ion-label-stub')
    145|       expect(labels.length).toBeGreaterThan(0)
       |                             ^
    146|       const paragraphs = labels[0].findAll('p')
    147|       expect(paragraphs).toHaveLength(2)

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[99/112]⎯

 FAIL  tests/unit/components/messaging/MessageSkeleton.test.ts > MessageSkeleton > Skeleton Content Structure > should have note with end slot
AssertionError: expected 0 to be greater than 0
 ❯ tests/unit/components/messaging/MessageSkeleton.test.ts:161:28
    159|       const wrapper = createWrapper()
    160|       const notes = wrapper.findAll('ion-note-stub')
    161|       expect(notes.length).toBeGreaterThan(0)
       |                            ^
    162|       expect(notes[0].attributes('slot')).toBe('end')
    163|     })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[100/112]⎯

 FAIL  tests/unit/components/messaging/MessageSkeleton.test.ts > MessageSkeleton > Skeleton Content Structure > should have skeleton text in note
AssertionError: expected 0 to be greater than 0
 ❯ tests/unit/components/messaging/MessageSkeleton.test.ts:168:28
    166|       const wrapper = createWrapper()
    167|       const notes = wrapper.findAll('ion-note-stub')
    168|       expect(notes.length).toBeGreaterThan(0)
       |                            ^
    169|       const noteSkeleton = notes[0].find('ion-skeleton-text-stub')
    170|       expect(noteSkeleton.exists()).toBe(true)

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[101/112]⎯

 FAIL  tests/unit/components/messaging/MessageSkeleton.test.ts > MessageSkeleton > Computed Properties > should handle null count prop
AssertionError: expected 1 to be 3 // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- 3[39m
[31m+ 1[39m

 ❯ tests/unit/components/messaging/MessageSkeleton.test.ts:198:40
    196|     it('should handle null count prop', () => {
    197|       const wrapper = createWrapper({ count: null })
    198|       expect(wrapper.vm.skeletonCount).toBe(3)
       |                                        ^
    199|     })
    200|   })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[102/112]⎯

 FAIL  tests/unit/components/messaging/MessageSkeleton.test.ts > MessageSkeleton > Edge Cases > should handle fractional count values
 FAIL  tests/unit/components/messaging/MessageSkeleton.test.ts > MessageSkeleton > Edge Cases > should handle NaN count
RangeError: Invalid array length
 ❯ renderList node_modules/@vue/runtime-core/dist/runtime-core.cjs.js:2920:11
 ❯ Proxy._sfc_render app/components/features/messaging/MessageSkeleton.vue:43:16
     41|         />
     42|       </ion-note>
     43|     </ion-item>
       |                ^
     44|   </ion-list>
     45| </template>
 ❯ renderComponentRoot node_modules/@vue/runtime-core/dist/runtime-core.cjs.js:6500:16
 ❯ ReactiveEffect.componentUpdateFn [as fn] node_modules/@vue/runtime-core/dist/runtime-core.cjs.js:5291:46
 ❯ ReactiveEffect.run node_modules/@vue/reactivity/dist/reactivity.cjs.js:241:19
 ❯ setupRenderEffect node_modules/@vue/runtime-core/dist/runtime-core.cjs.js:5426:5
 ❯ mountComponent node_modules/@vue/runtime-core/dist/runtime-core.cjs.js:5200:7
 ❯ processComponent node_modules/@vue/runtime-core/dist/runtime-core.cjs.js:5153:9
 ❯ patch node_modules/@vue/runtime-core/dist/runtime-core.cjs.js:4680:11
 ❯ ReactiveEffect.componentUpdateFn [as fn] node_modules/@vue/runtime-core/dist/runtime-core.cjs.js:5298:11

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[103/112]⎯

 FAIL  tests/unit/components/messaging/MessageSkeleton.test.ts > MessageSkeleton > Edge Cases > should handle string number count
AssertionError: expected [] to have a length of 5 but got +0

[32m- Expected[39m
[31m+ Received[39m

[32m- 5[39m
[31m+ 0[39m

 ❯ tests/unit/components/messaging/MessageSkeleton.test.ts:212:21
    210|       const wrapper = createWrapper({ count: '5' as any })
    211|       const items = wrapper.findAll('ion-item-stub.skeleton-item')
    212|       expect(items).toHaveLength(5)
       |                     ^
    213|     })
    214| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[104/112]⎯

 FAIL  tests/unit/components/messaging/MessageSkeleton.test.ts > MessageSkeleton > Edge Cases > should handle Infinity count
AssertionError: expected [] to have a length of 10 but got +0

[32m- Expected[39m
[31m+ Received[39m

[32m- 10[39m
[31m+ 0[39m

 ❯ tests/unit/components/messaging/MessageSkeleton.test.ts:224:21
    222|       const wrapper = createWrapper({ count: Infinity })
    223|       const items = wrapper.findAll('ion-item-stub.skeleton-item')
    224|       expect(items).toHaveLength(10)
       |                     ^
    225|     })
    226|   })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[105/112]⎯

 FAIL  tests/unit/components/messaging/MessageSkeleton.test.ts > MessageSkeleton > Performance Considerations > should render efficiently with maximum items
AssertionError: expected [] to have a length of 10 but got +0

[32m- Expected[39m
[31m+ Received[39m

[32m- 10[39m
[31m+ 0[39m

 ❯ tests/unit/components/messaging/MessageSkeleton.test.ts:232:21
    230|       const wrapper = createWrapper({ count: 10 })
    231|       const items = wrapper.findAll('ion-item-stub.skeleton-item')
    232|       expect(items).toHaveLength(10)
       |                     ^
    233| 
    234|       // Check that all items have proper structure

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[106/112]⎯

 FAIL  tests/unit/components/messaging/MessageSkeleton.test.ts > MessageSkeleton > Accessibility > should have proper skeleton item class
AssertionError: expected 0 to be greater than 0
 ❯ tests/unit/components/messaging/MessageSkeleton.test.ts:259:28
    257|       const wrapper = createWrapper()
    258|       const items = wrapper.findAll('ion-item-stub.skeleton-item')
    259|       expect(items.length).toBeGreaterThan(0)
       |                            ^
    260|       items.forEach(item => {
    261|         expect(item.classes()).toContain('skeleton-item')

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[107/112]⎯

 FAIL  tests/unit/components/messaging/MessageSkeleton.test.ts > MessageSkeleton > Accessibility > should maintain semantic structure
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ tests/unit/components/messaging/MessageSkeleton.test.ts:270:29
    268| 
    269|       // Check semantic structure
    270|       expect(item.exists()).toBe(true)
       |                             ^
    271|       expect(item.find('ion-thumbnail-stub').exists()).toBe(true)
    272|       expect(item.find('ion-label-stub').exists()).toBe(true)

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[108/112]⎯

 FAIL  tests/unit/marketplace/wanted/useWanted.test.ts > useWanted > fetchWantedItems > should handle rate limiting errors
AssertionError: expected 'errors.rateLimit' to be 'Too many requests. Please wait a mome…' // Object.is equality

Expected: [32m"Too many requests. Please wait a moment and try again."[39m
Received: [31m"errors.rateLimit"[39m

 ❯ tests/unit/marketplace/wanted/useWanted.test.ts:125:53
    123|       mockRepository.getWantedItems.mockRejectedValue(rateLimitError)
    124|       await wantedComposable.fetchWantedItems()
    125|       expect(wantedComposable.error.value?.message).toBe(
       |                                                     ^
    126|         'Too many requests. Please wait a moment and try again.'
    127|       )

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[109/112]⎯

 FAIL  tests/unit/marketplace/wanted/useWanted.test.ts > useWanted > fetchWantedDetail > should handle rate limiting for detail fetch
AssertionError: expected 'errors.rateLimit' to be 'Too many requests. Please wait a mome…' // Object.is equality

Expected: [32m"Too many requests. Please wait a moment and try again."[39m
Received: [31m"errors.rateLimit"[39m

 ❯ tests/unit/marketplace/wanted/useWanted.test.ts:237:53
    235|       mockRepository.getWantedDetail.mockRejectedValue(rateLimitError)
    236|       await wantedComposable.fetchWantedDetail('1')
    237|       expect(wantedComposable.error.value?.message).toBe(
       |                                                     ^
    238|         'Too many requests. Please wait a moment and try again.'
    239|       )

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[110/112]⎯

⎯⎯⎯⎯⎯⎯ Unhandled Errors ⎯⎯⎯⎯⎯⎯

Vitest caught 2 unhandled errors during the test run.
This might cause false positive tests. Resolve unhandled errors to make sure your tests are not affected.

⎯⎯⎯⎯ Unhandled Rejection ⎯⎯⎯⎯⎯
Error: Timeout
 ❯ tests/unit/composables/useTranslation.test.ts:478:33
    476|     it('should handle API timeout', async () => {
    477|       const timeoutPromise = new Promise((_, reject) => {
    478|         setTimeout(() => reject(new Error('Timeout')), 1000)
       |                                 ^
    479|       })
    480| 
 ❯ callTimer node_modules/vitest/dist/chunks/vi.bdSIJ99Y.js:2211:25
 ❯ doTickInner node_modules/vitest/dist/chunks/vi.bdSIJ99Y.js:2814:30
 ❯ doTick node_modules/vitest/dist/chunks/vi.bdSIJ99Y.js:2895:21
 ❯ Object.tick node_modules/vitest/dist/chunks/vi.bdSIJ99Y.js:2903:21
 ❯ FakeTimers.advanceTimersByTime node_modules/vitest/dist/chunks/vi.bdSIJ99Y.js:3629:44
 ❯ Object.advanceTimersByTime node_modules/vitest/dist/chunks/vi.bdSIJ99Y.js:3857:13
 ❯ tests/unit/composables/useTranslation.test.ts:494:10
 ❯ node_modules/@vitest/runner/dist/chunk-hooks.js:155:11
 ❯ node_modules/@vitest/runner/dist/chunk-hooks.js:752:26

This error originated in "tests/unit/composables/useTranslation.test.ts" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.

⎯⎯⎯⎯ Unhandled Rejection ⎯⎯⎯⎯⎯
Error: Action failed
 ❯ tests/unit/components/messaging/EmptyStateMessage.test.ts:244:21
    242| 
    243|     it('should handle ctaAction errors gracefully', async () => {
    244|       const error = new Error('Action failed')
       |                     ^
    245|       const ctaAction = vi.fn().mockRejectedValue(error)
    246|       const wrapper = createWrapper({
 ❯ node_modules/@vitest/runner/dist/chunk-hooks.js:155:11
 ❯ node_modules/@vitest/runner/dist/chunk-hooks.js:752:26
 ❯ node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20
 ❯ runWithTimeout node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10
 ❯ runTest node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12
 ❯ processTicksAndRejections node:internal/process/task_queues:105:5
 ❯ runSuite node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8
 ❯ runSuite node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8

This error originated in "tests/unit/components/messaging/EmptyStateMessage.test.ts" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯


 Test Files  14 failed | 34 passed (48)
      Tests  108 failed | 935 passed (1043)
     Errors  2 errors
   Start at  12:38:29
   Duration  27.23s (transform 4.16s, setup 8.42s, collect 3.77s, tests 10.69s, environment 29.63s, prepare 5.03s)

